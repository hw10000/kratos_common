// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: server/v1/server.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateAddressRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chain         string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`     // 链名称
	Network       string                 `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"` // 网络名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAddressRequest) Reset() {
	*x = CreateAddressRequest{}
	mi := &file_server_v1_server_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAddressRequest) ProtoMessage() {}

func (x *CreateAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAddressRequest.ProtoReflect.Descriptor instead.
func (*CreateAddressRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAddressRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *CreateAddressRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

type CreateAddressReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`                      // 地址
	StorageId     string                 `protobuf:"bytes,2,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"` // 存储ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAddressReply) Reset() {
	*x = CreateAddressReply{}
	mi := &file_server_v1_server_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAddressReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAddressReply) ProtoMessage() {}

func (x *CreateAddressReply) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAddressReply.ProtoReflect.Descriptor instead.
func (*CreateAddressReply) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAddressReply) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateAddressReply) GetStorageId() string {
	if x != nil {
		return x.StorageId
	}
	return ""
}

type StoreSecretRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Chain string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	// Types that are valid to be assigned to Secret:
	//
	//	*StoreSecretRequest_PrivateKey
	//	*StoreSecretRequest_Mnemonic
	Secret        isStoreSecretRequest_Secret `protobuf_oneof:"secret"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreSecretRequest) Reset() {
	*x = StoreSecretRequest{}
	mi := &file_server_v1_server_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreSecretRequest) ProtoMessage() {}

func (x *StoreSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreSecretRequest.ProtoReflect.Descriptor instead.
func (*StoreSecretRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{2}
}

func (x *StoreSecretRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *StoreSecretRequest) GetSecret() isStoreSecretRequest_Secret {
	if x != nil {
		return x.Secret
	}
	return nil
}

func (x *StoreSecretRequest) GetPrivateKey() string {
	if x != nil {
		if x, ok := x.Secret.(*StoreSecretRequest_PrivateKey); ok {
			return x.PrivateKey
		}
	}
	return ""
}

func (x *StoreSecretRequest) GetMnemonic() *MnemonicSecret {
	if x != nil {
		if x, ok := x.Secret.(*StoreSecretRequest_Mnemonic); ok {
			return x.Mnemonic
		}
	}
	return nil
}

type isStoreSecretRequest_Secret interface {
	isStoreSecretRequest_Secret()
}

type StoreSecretRequest_PrivateKey struct {
	PrivateKey string `protobuf:"bytes,2,opt,name=private_key,json=privateKey,proto3,oneof"`
}

type StoreSecretRequest_Mnemonic struct {
	Mnemonic *MnemonicSecret `protobuf:"bytes,3,opt,name=mnemonic,proto3,oneof"`
}

func (*StoreSecretRequest_PrivateKey) isStoreSecretRequest_Secret() {}

func (*StoreSecretRequest_Mnemonic) isStoreSecretRequest_Secret() {}

type MnemonicSecret struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mnemonic      string                 `protobuf:"bytes,1,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
	PathIndex     uint32                 `protobuf:"varint,2,opt,name=path_index,json=pathIndex,proto3" json:"path_index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MnemonicSecret) Reset() {
	*x = MnemonicSecret{}
	mi := &file_server_v1_server_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MnemonicSecret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MnemonicSecret) ProtoMessage() {}

func (x *MnemonicSecret) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MnemonicSecret.ProtoReflect.Descriptor instead.
func (*MnemonicSecret) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{3}
}

func (x *MnemonicSecret) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

func (x *MnemonicSecret) GetPathIndex() uint32 {
	if x != nil {
		return x.PathIndex
	}
	return 0
}

type StoreSecretReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StorageId     string                 `protobuf:"bytes,1,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreSecretReply) Reset() {
	*x = StoreSecretReply{}
	mi := &file_server_v1_server_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreSecretReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreSecretReply) ProtoMessage() {}

func (x *StoreSecretReply) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreSecretReply.ProtoReflect.Descriptor instead.
func (*StoreSecretReply) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{4}
}

func (x *StoreSecretReply) GetStorageId() string {
	if x != nil {
		return x.StorageId
	}
	return ""
}

func (x *StoreSecretReply) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type DecodeSecretRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StorageId     string                 `protobuf:"bytes,1,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodeSecretRequest) Reset() {
	*x = DecodeSecretRequest{}
	mi := &file_server_v1_server_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodeSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeSecretRequest) ProtoMessage() {}

func (x *DecodeSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeSecretRequest.ProtoReflect.Descriptor instead.
func (*DecodeSecretRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{5}
}

func (x *DecodeSecretRequest) GetStorageId() string {
	if x != nil {
		return x.StorageId
	}
	return ""
}

type DecodeSecretReply struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Secret:
	//
	//	*DecodeSecretReply_PrivateKey
	//	*DecodeSecretReply_Mnemonic
	Secret        isDecodeSecretReply_Secret `protobuf_oneof:"secret"`
	Address       string                     `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodeSecretReply) Reset() {
	*x = DecodeSecretReply{}
	mi := &file_server_v1_server_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodeSecretReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeSecretReply) ProtoMessage() {}

func (x *DecodeSecretReply) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeSecretReply.ProtoReflect.Descriptor instead.
func (*DecodeSecretReply) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{6}
}

func (x *DecodeSecretReply) GetSecret() isDecodeSecretReply_Secret {
	if x != nil {
		return x.Secret
	}
	return nil
}

func (x *DecodeSecretReply) GetPrivateKey() string {
	if x != nil {
		if x, ok := x.Secret.(*DecodeSecretReply_PrivateKey); ok {
			return x.PrivateKey
		}
	}
	return ""
}

func (x *DecodeSecretReply) GetMnemonic() *MnemonicSecret {
	if x != nil {
		if x, ok := x.Secret.(*DecodeSecretReply_Mnemonic); ok {
			return x.Mnemonic
		}
	}
	return nil
}

func (x *DecodeSecretReply) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type isDecodeSecretReply_Secret interface {
	isDecodeSecretReply_Secret()
}

type DecodeSecretReply_PrivateKey struct {
	PrivateKey string `protobuf:"bytes,1,opt,name=private_key,json=privateKey,proto3,oneof"`
}

type DecodeSecretReply_Mnemonic struct {
	Mnemonic *MnemonicSecret `protobuf:"bytes,2,opt,name=mnemonic,proto3,oneof"`
}

func (*DecodeSecretReply_PrivateKey) isDecodeSecretReply_Secret() {}

func (*DecodeSecretReply_Mnemonic) isDecodeSecretReply_Secret() {}

type StoreSecretBatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Secrets       []*StoreSecretRequest  `protobuf:"bytes,1,rep,name=secrets,proto3" json:"secrets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreSecretBatchRequest) Reset() {
	*x = StoreSecretBatchRequest{}
	mi := &file_server_v1_server_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreSecretBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreSecretBatchRequest) ProtoMessage() {}

func (x *StoreSecretBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreSecretBatchRequest.ProtoReflect.Descriptor instead.
func (*StoreSecretBatchRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{7}
}

func (x *StoreSecretBatchRequest) GetSecrets() []*StoreSecretRequest {
	if x != nil {
		return x.Secrets
	}
	return nil
}

type StoreSecretBatchReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Storages      []*StoreSecretReply    `protobuf:"bytes,1,rep,name=storages,proto3" json:"storages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreSecretBatchReply) Reset() {
	*x = StoreSecretBatchReply{}
	mi := &file_server_v1_server_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreSecretBatchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreSecretBatchReply) ProtoMessage() {}

func (x *StoreSecretBatchReply) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreSecretBatchReply.ProtoReflect.Descriptor instead.
func (*StoreSecretBatchReply) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{8}
}

func (x *StoreSecretBatchReply) GetStorages() []*StoreSecretReply {
	if x != nil {
		return x.Storages
	}
	return nil
}

type DecodeSecretBatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StorageIds    []string               `protobuf:"bytes,1,rep,name=storage_ids,json=storageIds,proto3" json:"storage_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodeSecretBatchRequest) Reset() {
	*x = DecodeSecretBatchRequest{}
	mi := &file_server_v1_server_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodeSecretBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeSecretBatchRequest) ProtoMessage() {}

func (x *DecodeSecretBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeSecretBatchRequest.ProtoReflect.Descriptor instead.
func (*DecodeSecretBatchRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{9}
}

func (x *DecodeSecretBatchRequest) GetStorageIds() []string {
	if x != nil {
		return x.StorageIds
	}
	return nil
}

type DecodeSecretBatchReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Storages      []*DecodeSecretReply   `protobuf:"bytes,1,rep,name=storages,proto3" json:"storages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodeSecretBatchReply) Reset() {
	*x = DecodeSecretBatchReply{}
	mi := &file_server_v1_server_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodeSecretBatchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeSecretBatchReply) ProtoMessage() {}

func (x *DecodeSecretBatchReply) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeSecretBatchReply.ProtoReflect.Descriptor instead.
func (*DecodeSecretBatchReply) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{10}
}

func (x *DecodeSecretBatchReply) GetStorages() []*DecodeSecretReply {
	if x != nil {
		return x.Storages
	}
	return nil
}

type SignTxRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StorageId     string                 `protobuf:"bytes,1,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	RawTx         string                 `protobuf:"bytes,2,opt,name=raw_tx,json=rawTx,proto3" json:"raw_tx,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignTxRequest) Reset() {
	*x = SignTxRequest{}
	mi := &file_server_v1_server_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignTxRequest) ProtoMessage() {}

func (x *SignTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignTxRequest.ProtoReflect.Descriptor instead.
func (*SignTxRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{11}
}

func (x *SignTxRequest) GetStorageId() string {
	if x != nil {
		return x.StorageId
	}
	return ""
}

func (x *SignTxRequest) GetRawTx() string {
	if x != nil {
		return x.RawTx
	}
	return ""
}

type SignTxReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SignedTx      string                 `protobuf:"bytes,1,opt,name=signed_tx,json=signedTx,proto3" json:"signed_tx,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignTxReply) Reset() {
	*x = SignTxReply{}
	mi := &file_server_v1_server_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignTxReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignTxReply) ProtoMessage() {}

func (x *SignTxReply) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignTxReply.ProtoReflect.Descriptor instead.
func (*SignTxReply) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{12}
}

func (x *SignTxReply) GetSignedTx() string {
	if x != nil {
		return x.SignedTx
	}
	return ""
}

type SignTxBatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StorageId     string                 `protobuf:"bytes,1,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	RawTxs        []string               `protobuf:"bytes,2,rep,name=raw_txs,json=rawTxs,proto3" json:"raw_txs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignTxBatchRequest) Reset() {
	*x = SignTxBatchRequest{}
	mi := &file_server_v1_server_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignTxBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignTxBatchRequest) ProtoMessage() {}

func (x *SignTxBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignTxBatchRequest.ProtoReflect.Descriptor instead.
func (*SignTxBatchRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{13}
}

func (x *SignTxBatchRequest) GetStorageId() string {
	if x != nil {
		return x.StorageId
	}
	return ""
}

func (x *SignTxBatchRequest) GetRawTxs() []string {
	if x != nil {
		return x.RawTxs
	}
	return nil
}

type SignTxBatchReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SignedTxs     []string               `protobuf:"bytes,1,rep,name=signed_txs,json=signedTxs,proto3" json:"signed_txs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignTxBatchReply) Reset() {
	*x = SignTxBatchReply{}
	mi := &file_server_v1_server_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignTxBatchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignTxBatchReply) ProtoMessage() {}

func (x *SignTxBatchReply) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignTxBatchReply.ProtoReflect.Descriptor instead.
func (*SignTxBatchReply) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{14}
}

func (x *SignTxBatchReply) GetSignedTxs() []string {
	if x != nil {
		return x.SignedTxs
	}
	return nil
}

type CreateAddressBatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chain         string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`     // 链名称
	Network       string                 `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"` // 网络名称
	Count         uint32                 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`    // 数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAddressBatchRequest) Reset() {
	*x = CreateAddressBatchRequest{}
	mi := &file_server_v1_server_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAddressBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAddressBatchRequest) ProtoMessage() {}

func (x *CreateAddressBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAddressBatchRequest.ProtoReflect.Descriptor instead.
func (*CreateAddressBatchRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{15}
}

func (x *CreateAddressBatchRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *CreateAddressBatchRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *CreateAddressBatchRequest) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CreateAddressBatchReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Replies       []*CreateAddressReply  `protobuf:"bytes,1,rep,name=replies,proto3" json:"replies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAddressBatchReply) Reset() {
	*x = CreateAddressBatchReply{}
	mi := &file_server_v1_server_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAddressBatchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAddressBatchReply) ProtoMessage() {}

func (x *CreateAddressBatchReply) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAddressBatchReply.ProtoReflect.Descriptor instead.
func (*CreateAddressBatchReply) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{16}
}

func (x *CreateAddressBatchReply) GetReplies() []*CreateAddressReply {
	if x != nil {
		return x.Replies
	}
	return nil
}

var File_server_v1_server_proto protoreflect.FileDescriptor

const file_server_v1_server_proto_rawDesc = "" +
	"\n" +
	"\x16server/v1/server.proto\x12\rapi.server.v1\"F\n" +
	"\x14CreateAddressRequest\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12\x18\n" +
	"\anetwork\x18\x02 \x01(\tR\anetwork\"M\n" +
	"\x12CreateAddressReply\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x1d\n" +
	"\n" +
	"storage_id\x18\x02 \x01(\tR\tstorageId\"\x94\x01\n" +
	"\x12StoreSecretRequest\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12!\n" +
	"\vprivate_key\x18\x02 \x01(\tH\x00R\n" +
	"privateKey\x12;\n" +
	"\bmnemonic\x18\x03 \x01(\v2\x1d.api.server.v1.MnemonicSecretH\x00R\bmnemonicB\b\n" +
	"\x06secret\"K\n" +
	"\x0eMnemonicSecret\x12\x1a\n" +
	"\bmnemonic\x18\x01 \x01(\tR\bmnemonic\x12\x1d\n" +
	"\n" +
	"path_index\x18\x02 \x01(\rR\tpathIndex\"K\n" +
	"\x10StoreSecretReply\x12\x1d\n" +
	"\n" +
	"storage_id\x18\x01 \x01(\tR\tstorageId\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\"4\n" +
	"\x13DecodeSecretRequest\x12\x1d\n" +
	"\n" +
	"storage_id\x18\x01 \x01(\tR\tstorageId\"\x97\x01\n" +
	"\x11DecodeSecretReply\x12!\n" +
	"\vprivate_key\x18\x01 \x01(\tH\x00R\n" +
	"privateKey\x12;\n" +
	"\bmnemonic\x18\x02 \x01(\v2\x1d.api.server.v1.MnemonicSecretH\x00R\bmnemonic\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddressB\b\n" +
	"\x06secret\"V\n" +
	"\x17StoreSecretBatchRequest\x12;\n" +
	"\asecrets\x18\x01 \x03(\v2!.api.server.v1.StoreSecretRequestR\asecrets\"T\n" +
	"\x15StoreSecretBatchReply\x12;\n" +
	"\bstorages\x18\x01 \x03(\v2\x1f.api.server.v1.StoreSecretReplyR\bstorages\";\n" +
	"\x18DecodeSecretBatchRequest\x12\x1f\n" +
	"\vstorage_ids\x18\x01 \x03(\tR\n" +
	"storageIds\"V\n" +
	"\x16DecodeSecretBatchReply\x12<\n" +
	"\bstorages\x18\x01 \x03(\v2 .api.server.v1.DecodeSecretReplyR\bstorages\"E\n" +
	"\rSignTxRequest\x12\x1d\n" +
	"\n" +
	"storage_id\x18\x01 \x01(\tR\tstorageId\x12\x15\n" +
	"\x06raw_tx\x18\x02 \x01(\tR\x05rawTx\"*\n" +
	"\vSignTxReply\x12\x1b\n" +
	"\tsigned_tx\x18\x01 \x01(\tR\bsignedTx\"L\n" +
	"\x12SignTxBatchRequest\x12\x1d\n" +
	"\n" +
	"storage_id\x18\x01 \x01(\tR\tstorageId\x12\x17\n" +
	"\araw_txs\x18\x02 \x03(\tR\x06rawTxs\"1\n" +
	"\x10SignTxBatchReply\x12\x1d\n" +
	"\n" +
	"signed_txs\x18\x01 \x03(\tR\tsignedTxs\"a\n" +
	"\x19CreateAddressBatchRequest\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12\x18\n" +
	"\anetwork\x18\x02 \x01(\tR\anetwork\x12\x14\n" +
	"\x05count\x18\x03 \x01(\rR\x05count\"V\n" +
	"\x17CreateAddressBatchReply\x12;\n" +
	"\areplies\x18\x01 \x03(\v2!.api.server.v1.CreateAddressReplyR\areplies2\xd1\x05\n" +
	"\aAddress\x12W\n" +
	"\rCreateAddress\x12#.api.server.v1.CreateAddressRequest\x1a!.api.server.v1.CreateAddressReply\x12f\n" +
	"\x12CreateAddressBatch\x12(.api.server.v1.CreateAddressBatchRequest\x1a&.api.server.v1.CreateAddressBatchReply\x12Q\n" +
	"\vStoreSecret\x12!.api.server.v1.StoreSecretRequest\x1a\x1f.api.server.v1.StoreSecretReply\x12T\n" +
	"\fDecodeSecret\x12\".api.server.v1.DecodeSecretRequest\x1a .api.server.v1.DecodeSecretReply\x12`\n" +
	"\x10StoreSecretBatch\x12&.api.server.v1.StoreSecretBatchRequest\x1a$.api.server.v1.StoreSecretBatchReply\x12c\n" +
	"\x11DecodeSecretBatch\x12'.api.server.v1.DecodeSecretBatchRequest\x1a%.api.server.v1.DecodeSecretBatchReply\x12B\n" +
	"\x06SignTx\x12\x1c.api.server.v1.SignTxRequest\x1a\x1a.api.server.v1.SignTxReply\x12Q\n" +
	"\vSignTxBatch\x12!.api.server.v1.SignTxBatchRequest\x1a\x1f.api.server.v1.SignTxBatchReplyB;\n" +
	"\rapi.server.v1P\x01Z(asset_management_server/api/server/v1;v1b\x06proto3"

var (
	file_server_v1_server_proto_rawDescOnce sync.Once
	file_server_v1_server_proto_rawDescData []byte
)

func file_server_v1_server_proto_rawDescGZIP() []byte {
	file_server_v1_server_proto_rawDescOnce.Do(func() {
		file_server_v1_server_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_server_v1_server_proto_rawDesc), len(file_server_v1_server_proto_rawDesc)))
	})
	return file_server_v1_server_proto_rawDescData
}

var file_server_v1_server_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_server_v1_server_proto_goTypes = []any{
	(*CreateAddressRequest)(nil),      // 0: api.server.v1.CreateAddressRequest
	(*CreateAddressReply)(nil),        // 1: api.server.v1.CreateAddressReply
	(*StoreSecretRequest)(nil),        // 2: api.server.v1.StoreSecretRequest
	(*MnemonicSecret)(nil),            // 3: api.server.v1.MnemonicSecret
	(*StoreSecretReply)(nil),          // 4: api.server.v1.StoreSecretReply
	(*DecodeSecretRequest)(nil),       // 5: api.server.v1.DecodeSecretRequest
	(*DecodeSecretReply)(nil),         // 6: api.server.v1.DecodeSecretReply
	(*StoreSecretBatchRequest)(nil),   // 7: api.server.v1.StoreSecretBatchRequest
	(*StoreSecretBatchReply)(nil),     // 8: api.server.v1.StoreSecretBatchReply
	(*DecodeSecretBatchRequest)(nil),  // 9: api.server.v1.DecodeSecretBatchRequest
	(*DecodeSecretBatchReply)(nil),    // 10: api.server.v1.DecodeSecretBatchReply
	(*SignTxRequest)(nil),             // 11: api.server.v1.SignTxRequest
	(*SignTxReply)(nil),               // 12: api.server.v1.SignTxReply
	(*SignTxBatchRequest)(nil),        // 13: api.server.v1.SignTxBatchRequest
	(*SignTxBatchReply)(nil),          // 14: api.server.v1.SignTxBatchReply
	(*CreateAddressBatchRequest)(nil), // 15: api.server.v1.CreateAddressBatchRequest
	(*CreateAddressBatchReply)(nil),   // 16: api.server.v1.CreateAddressBatchReply
}
var file_server_v1_server_proto_depIdxs = []int32{
	3,  // 0: api.server.v1.StoreSecretRequest.mnemonic:type_name -> api.server.v1.MnemonicSecret
	3,  // 1: api.server.v1.DecodeSecretReply.mnemonic:type_name -> api.server.v1.MnemonicSecret
	2,  // 2: api.server.v1.StoreSecretBatchRequest.secrets:type_name -> api.server.v1.StoreSecretRequest
	4,  // 3: api.server.v1.StoreSecretBatchReply.storages:type_name -> api.server.v1.StoreSecretReply
	6,  // 4: api.server.v1.DecodeSecretBatchReply.storages:type_name -> api.server.v1.DecodeSecretReply
	1,  // 5: api.server.v1.CreateAddressBatchReply.replies:type_name -> api.server.v1.CreateAddressReply
	0,  // 6: api.server.v1.Address.CreateAddress:input_type -> api.server.v1.CreateAddressRequest
	15, // 7: api.server.v1.Address.CreateAddressBatch:input_type -> api.server.v1.CreateAddressBatchRequest
	2,  // 8: api.server.v1.Address.StoreSecret:input_type -> api.server.v1.StoreSecretRequest
	5,  // 9: api.server.v1.Address.DecodeSecret:input_type -> api.server.v1.DecodeSecretRequest
	7,  // 10: api.server.v1.Address.StoreSecretBatch:input_type -> api.server.v1.StoreSecretBatchRequest
	9,  // 11: api.server.v1.Address.DecodeSecretBatch:input_type -> api.server.v1.DecodeSecretBatchRequest
	11, // 12: api.server.v1.Address.SignTx:input_type -> api.server.v1.SignTxRequest
	13, // 13: api.server.v1.Address.SignTxBatch:input_type -> api.server.v1.SignTxBatchRequest
	1,  // 14: api.server.v1.Address.CreateAddress:output_type -> api.server.v1.CreateAddressReply
	16, // 15: api.server.v1.Address.CreateAddressBatch:output_type -> api.server.v1.CreateAddressBatchReply
	4,  // 16: api.server.v1.Address.StoreSecret:output_type -> api.server.v1.StoreSecretReply
	6,  // 17: api.server.v1.Address.DecodeSecret:output_type -> api.server.v1.DecodeSecretReply
	8,  // 18: api.server.v1.Address.StoreSecretBatch:output_type -> api.server.v1.StoreSecretBatchReply
	10, // 19: api.server.v1.Address.DecodeSecretBatch:output_type -> api.server.v1.DecodeSecretBatchReply
	12, // 20: api.server.v1.Address.SignTx:output_type -> api.server.v1.SignTxReply
	14, // 21: api.server.v1.Address.SignTxBatch:output_type -> api.server.v1.SignTxBatchReply
	14, // [14:22] is the sub-list for method output_type
	6,  // [6:14] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_server_v1_server_proto_init() }
func file_server_v1_server_proto_init() {
	if File_server_v1_server_proto != nil {
		return
	}
	file_server_v1_server_proto_msgTypes[2].OneofWrappers = []any{
		(*StoreSecretRequest_PrivateKey)(nil),
		(*StoreSecretRequest_Mnemonic)(nil),
	}
	file_server_v1_server_proto_msgTypes[6].OneofWrappers = []any{
		(*DecodeSecretReply_PrivateKey)(nil),
		(*DecodeSecretReply_Mnemonic)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_server_v1_server_proto_rawDesc), len(file_server_v1_server_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_server_v1_server_proto_goTypes,
		DependencyIndexes: file_server_v1_server_proto_depIdxs,
		MessageInfos:      file_server_v1_server_proto_msgTypes,
	}.Build()
	File_server_v1_server_proto = out.File
	file_server_v1_server_proto_goTypes = nil
	file_server_v1_server_proto_depIdxs = nil
}
