syntax = "proto3";

package api.server.v1;

option go_package = "asset_management_server/api/server/v1;v1";
option java_multiple_files = true;
option java_package = "api.server.v1";

service Address {
	rpc CreateAddress(CreateAddressRequest) returns (CreateAddressReply);
	rpc CreateAddressBatch(CreateAddressBatchRequest) returns (CreateAddressBatchReply);
	rpc StoreSecret (StoreSecretRequest) returns (StoreSecretReply);
	rpc DecodeSecret (DecodeSecretRequest) returns (DecodeSecretReply);
    rpc StoreSecretBatch (StoreSecretBatchRequest) returns (StoreSecretBatchReply);
    rpc DecodeSecretBatch (DecodeSecretBatchRequest) returns (DecodeSecretBatchReply);
	rpc SignTx (SignTxRequest) returns (SignTxReply);
	rpc SignTxBatch (SignTxBatchRequest) returns (SignTxBatchReply);


	rpc Withdrawal(WithdrawalRequest) returns (WithdrawalReply);
	rpc GetOrderDetail(GetOrderDetailRequest) returns (GetOrderDetailReply);
}

message CreateAddressRequest {
	string chain = 1; // 链名称
	string network = 2; // 网络名称
	optional string wallet_id =3; //钱包id
	optional string address_type =4;//创建类型
}

message CreateAddressReply {
	string address = 1; // 地址
	string storage_id = 2; // 存储ID
}


message StoreSecretRequest {
	string chain = 1;
	oneof secret {
		string private_key = 2;
		MnemonicSecret mnemonic = 3;
	}
}

message MnemonicSecret {
	string mnemonic = 1;
	uint32 path_index = 2;
}

message StoreSecretReply {
	string storage_id = 1;
	string address = 2;
}

message DecodeSecretRequest {
	string storage_id = 1;
}

message DecodeSecretReply {
	oneof secret {
		string private_key = 1;
		MnemonicSecret mnemonic = 2;
	}
	string address = 3;
}

message StoreSecretBatchRequest {
	repeated StoreSecretRequest secrets = 1;
}

message StoreSecretBatchReply {
	repeated StoreSecretReply storages = 1;
}

message DecodeSecretBatchRequest {
	repeated string storage_ids = 1;
}

message DecodeSecretBatchReply {
	repeated DecodeSecretReply storages = 1;
}

message SignTxRequest {
	string storage_id = 1;
	string raw_tx = 2;
	optional uint32 chain_id = 3;
}

message SignTxReply {
	string signed_tx = 1;
}

message SignTxBatchRequest {
	string storage_id = 1;
	repeated string raw_txs = 2;
	optional uint32 chain_id = 3;
}

message SignTxBatchReply {
	repeated string signed_txs = 1;
}

message CreateAddressBatchRequest {
	string chain = 1; // 链名称
	string network = 2; // 网络名称
	uint32 count = 3; // 数量
}

message CreateAddressBatchReply {
	repeated CreateAddressReply replies = 1;
}

message WithdrawalRequest {
	string chain = 1;
	string network = 2;
 	double amount = 3; // 提现金额 示例：amount=132.56
	string storage_id = 4; //存储ID
	string to_address = 5; // 提现地址
	optional string memo = 6; // 备注
	string token_address = 7; // 代币地址
	optional string out_order_no = 8; // 外部订单号
	string user_address = 9;
}

message WithdrawalReply {
	string biz_id = 1; 
	string out_order_no = 2; // 外部订单号
}

message Withdrawal {
	string token_address = 1; // 代币地址
	string token_symbol = 2; // 代币符号
	double amount = 3; // 金额
	string to_address = 4; // 目标提现地址
	string from_address = 5; // 源账户地址
}

message OrderDetail {
	string id = 1;
	string chain = 2; // 链
	string network = 3; // 网络
	string created_at = 4;
	string updated_at = 5;
	string storage_id = 6;
	string merchant_id = 7;
	string out_order_no = 8;
	optional string tx_hash = 9;
	int32 status = 10;
	optional string error_msg = 11;
	string memo = 12;
	optional Withdrawal withdrawal = 13; // 提现详情
}


message GetOrderDetailRequest {
	optional string biz_id = 1;  //Server服务订单ID
	optional string out_order_no = 2; // 外部订单号
}

message GetOrderDetailReply {
	OrderDetail order_detail = 1;
}