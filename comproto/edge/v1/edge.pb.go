// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: edge/v1/edge.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 黑名单地址检查请求
type CheckBlacklistAddressRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chain         string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`     // 链名称
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"` // 待检查的地址
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckBlacklistAddressRequest) Reset() {
	*x = CheckBlacklistAddressRequest{}
	mi := &file_edge_v1_edge_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckBlacklistAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckBlacklistAddressRequest) ProtoMessage() {}

func (x *CheckBlacklistAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edge_v1_edge_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckBlacklistAddressRequest.ProtoReflect.Descriptor instead.
func (*CheckBlacklistAddressRequest) Descriptor() ([]byte, []int) {
	return file_edge_v1_edge_proto_rawDescGZIP(), []int{0}
}

func (x *CheckBlacklistAddressRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *CheckBlacklistAddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// 黑名单地址检查响应
type CheckBlacklistAddressResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsBlacklisted bool                   `protobuf:"varint,1,opt,name=is_blacklisted,json=isBlacklisted,proto3" json:"is_blacklisted,omitempty"` // 是否在黑名单中
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckBlacklistAddressResponse) Reset() {
	*x = CheckBlacklistAddressResponse{}
	mi := &file_edge_v1_edge_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckBlacklistAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckBlacklistAddressResponse) ProtoMessage() {}

func (x *CheckBlacklistAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edge_v1_edge_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckBlacklistAddressResponse.ProtoReflect.Descriptor instead.
func (*CheckBlacklistAddressResponse) Descriptor() ([]byte, []int) {
	return file_edge_v1_edge_proto_rawDescGZIP(), []int{1}
}

func (x *CheckBlacklistAddressResponse) GetIsBlacklisted() bool {
	if x != nil {
		return x.IsBlacklisted
	}
	return false
}

// 请求消息
type GetSupportedChainsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSupportedChainsRequest) Reset() {
	*x = GetSupportedChainsRequest{}
	mi := &file_edge_v1_edge_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSupportedChainsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSupportedChainsRequest) ProtoMessage() {}

func (x *GetSupportedChainsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edge_v1_edge_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSupportedChainsRequest.ProtoReflect.Descriptor instead.
func (*GetSupportedChainsRequest) Descriptor() ([]byte, []int) {
	return file_edge_v1_edge_proto_rawDescGZIP(), []int{2}
}

// 响应消息
type GetSupportedChainsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chains        []*Chain               `protobuf:"bytes,1,rep,name=chains,proto3" json:"chains,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSupportedChainsReply) Reset() {
	*x = GetSupportedChainsReply{}
	mi := &file_edge_v1_edge_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSupportedChainsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSupportedChainsReply) ProtoMessage() {}

func (x *GetSupportedChainsReply) ProtoReflect() protoreflect.Message {
	mi := &file_edge_v1_edge_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSupportedChainsReply.ProtoReflect.Descriptor instead.
func (*GetSupportedChainsReply) Descriptor() ([]byte, []int) {
	return file_edge_v1_edge_proto_rawDescGZIP(), []int{3}
}

func (x *GetSupportedChainsReply) GetChains() []*Chain {
	if x != nil {
		return x.Chains
	}
	return nil
}

type Chain struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Chain           string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	ContractAddress string                 `protobuf:"bytes,2,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Chain) Reset() {
	*x = Chain{}
	mi := &file_edge_v1_edge_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chain) ProtoMessage() {}

func (x *Chain) ProtoReflect() protoreflect.Message {
	mi := &file_edge_v1_edge_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chain.ProtoReflect.Descriptor instead.
func (*Chain) Descriptor() ([]byte, []int) {
	return file_edge_v1_edge_proto_rawDescGZIP(), []int{4}
}

func (x *Chain) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *Chain) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

// 请求消息
type GetTokenByChainRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chain         string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTokenByChainRequest) Reset() {
	*x = GetTokenByChainRequest{}
	mi := &file_edge_v1_edge_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenByChainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenByChainRequest) ProtoMessage() {}

func (x *GetTokenByChainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edge_v1_edge_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenByChainRequest.ProtoReflect.Descriptor instead.
func (*GetTokenByChainRequest) Descriptor() ([]byte, []int) {
	return file_edge_v1_edge_proto_rawDescGZIP(), []int{5}
}

func (x *GetTokenByChainRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

// 响应消息
type GetTokenByChainReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tokens        []*Token               `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTokenByChainReply) Reset() {
	*x = GetTokenByChainReply{}
	mi := &file_edge_v1_edge_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenByChainReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenByChainReply) ProtoMessage() {}

func (x *GetTokenByChainReply) ProtoReflect() protoreflect.Message {
	mi := &file_edge_v1_edge_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenByChainReply.ProtoReflect.Descriptor instead.
func (*GetTokenByChainReply) Descriptor() ([]byte, []int) {
	return file_edge_v1_edge_proto_rawDescGZIP(), []int{6}
}

func (x *GetTokenByChainReply) GetTokens() []*Token {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type Token struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chain         string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	Symbol        string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Address       string                 `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Decimals      uint32                 `protobuf:"varint,5,opt,name=decimals,proto3" json:"decimals,omitempty"`
	LogoURI       string                 `protobuf:"bytes,6,opt,name=logoURI,proto3" json:"logoURI,omitempty"`
	IsCrossEnable int32                  `protobuf:"varint,7,opt,name=isCrossEnable,proto3" json:"isCrossEnable,omitempty"`
	WithdrawGas   uint32                 `protobuf:"varint,8,opt,name=withdrawGas,proto3" json:"withdrawGas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Token) Reset() {
	*x = Token{}
	mi := &file_edge_v1_edge_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_edge_v1_edge_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_edge_v1_edge_proto_rawDescGZIP(), []int{7}
}

func (x *Token) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *Token) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Token) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Token) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Token) GetDecimals() uint32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *Token) GetLogoURI() string {
	if x != nil {
		return x.LogoURI
	}
	return ""
}

func (x *Token) GetIsCrossEnable() int32 {
	if x != nil {
		return x.IsCrossEnable
	}
	return 0
}

func (x *Token) GetWithdrawGas() uint32 {
	if x != nil {
		return x.WithdrawGas
	}
	return 0
}

// 请求消息
type GetQuoteRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	FromTokenAddress string                 `protobuf:"bytes,1,opt,name=fromTokenAddress,proto3" json:"fromTokenAddress,omitempty"`
	ToTokenAddress   string                 `protobuf:"bytes,2,opt,name=toTokenAddress,proto3" json:"toTokenAddress,omitempty"`
	FromTokenAmount  string                 `protobuf:"bytes,3,opt,name=fromTokenAmount,proto3" json:"fromTokenAmount,omitempty"`
	FromTokenChain   string                 `protobuf:"bytes,4,opt,name=fromTokenChain,proto3" json:"fromTokenChain,omitempty"`
	ToTokenChain     string                 `protobuf:"bytes,5,opt,name=toTokenChain,proto3" json:"toTokenChain,omitempty"`
	UserAddr         string                 `protobuf:"bytes,6,opt,name=userAddr,proto3" json:"userAddr,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetQuoteRequest) Reset() {
	*x = GetQuoteRequest{}
	mi := &file_edge_v1_edge_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuoteRequest) ProtoMessage() {}

func (x *GetQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edge_v1_edge_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuoteRequest.ProtoReflect.Descriptor instead.
func (*GetQuoteRequest) Descriptor() ([]byte, []int) {
	return file_edge_v1_edge_proto_rawDescGZIP(), []int{8}
}

func (x *GetQuoteRequest) GetFromTokenAddress() string {
	if x != nil {
		return x.FromTokenAddress
	}
	return ""
}

func (x *GetQuoteRequest) GetToTokenAddress() string {
	if x != nil {
		return x.ToTokenAddress
	}
	return ""
}

func (x *GetQuoteRequest) GetFromTokenAmount() string {
	if x != nil {
		return x.FromTokenAmount
	}
	return ""
}

func (x *GetQuoteRequest) GetFromTokenChain() string {
	if x != nil {
		return x.FromTokenChain
	}
	return ""
}

func (x *GetQuoteRequest) GetToTokenChain() string {
	if x != nil {
		return x.ToTokenChain
	}
	return ""
}

func (x *GetQuoteRequest) GetUserAddr() string {
	if x != nil {
		return x.UserAddr
	}
	return ""
}

// 响应消息
type GetQuoteReply struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	AmountOutMin     string                 `protobuf:"bytes,1,opt,name=amountOutMin,proto3" json:"amountOutMin,omitempty"`
	ChainFee         string                 `protobuf:"bytes,2,opt,name=chainFee,proto3" json:"chainFee,omitempty"`
	ContractAddress  string                 `protobuf:"bytes,3,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"`
	DepositMin       string                 `protobuf:"bytes,4,opt,name=depositMin,proto3" json:"depositMin,omitempty"`
	DepositMax       string                 `protobuf:"bytes,5,opt,name=depositMax,proto3" json:"depositMax,omitempty"`
	Dex              string                 `protobuf:"bytes,6,opt,name=dex,proto3" json:"dex,omitempty"`
	Fee              float32                `protobuf:"fixed32,7,opt,name=fee,proto3" json:"fee,omitempty"`
	FeeToken         string                 `protobuf:"bytes,8,opt,name=feeToken,proto3" json:"feeToken,omitempty"`
	FromTokenAmount  string                 `protobuf:"bytes,9,opt,name=fromTokenAmount,proto3" json:"fromTokenAmount,omitempty"`
	FromTokenDecimal int32                  `protobuf:"varint,10,opt,name=fromTokenDecimal,proto3" json:"fromTokenDecimal,omitempty"`
	ToTokenAmount    string                 `protobuf:"bytes,11,opt,name=toTokenAmount,proto3" json:"toTokenAmount,omitempty"`
	ToTokenDecimal   int32                  `protobuf:"varint,12,opt,name=toTokenDecimal,proto3" json:"toTokenDecimal,omitempty"`
	Path             []string               `protobuf:"bytes,13,rep,name=path,proto3" json:"path,omitempty"`
	LogoUrl          string                 `protobuf:"bytes,14,opt,name=logoUrl,proto3" json:"logoUrl,omitempty"`
	EstimatedTime    int64                  `protobuf:"varint,15,opt,name=estimatedTime,proto3" json:"estimatedTime,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetQuoteReply) Reset() {
	*x = GetQuoteReply{}
	mi := &file_edge_v1_edge_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuoteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuoteReply) ProtoMessage() {}

func (x *GetQuoteReply) ProtoReflect() protoreflect.Message {
	mi := &file_edge_v1_edge_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuoteReply.ProtoReflect.Descriptor instead.
func (*GetQuoteReply) Descriptor() ([]byte, []int) {
	return file_edge_v1_edge_proto_rawDescGZIP(), []int{9}
}

func (x *GetQuoteReply) GetAmountOutMin() string {
	if x != nil {
		return x.AmountOutMin
	}
	return ""
}

func (x *GetQuoteReply) GetChainFee() string {
	if x != nil {
		return x.ChainFee
	}
	return ""
}

func (x *GetQuoteReply) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *GetQuoteReply) GetDepositMin() string {
	if x != nil {
		return x.DepositMin
	}
	return ""
}

func (x *GetQuoteReply) GetDepositMax() string {
	if x != nil {
		return x.DepositMax
	}
	return ""
}

func (x *GetQuoteReply) GetDex() string {
	if x != nil {
		return x.Dex
	}
	return ""
}

func (x *GetQuoteReply) GetFee() float32 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *GetQuoteReply) GetFeeToken() string {
	if x != nil {
		return x.FeeToken
	}
	return ""
}

func (x *GetQuoteReply) GetFromTokenAmount() string {
	if x != nil {
		return x.FromTokenAmount
	}
	return ""
}

func (x *GetQuoteReply) GetFromTokenDecimal() int32 {
	if x != nil {
		return x.FromTokenDecimal
	}
	return 0
}

func (x *GetQuoteReply) GetToTokenAmount() string {
	if x != nil {
		return x.ToTokenAmount
	}
	return ""
}

func (x *GetQuoteReply) GetToTokenDecimal() int32 {
	if x != nil {
		return x.ToTokenDecimal
	}
	return 0
}

func (x *GetQuoteReply) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *GetQuoteReply) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *GetQuoteReply) GetEstimatedTime() int64 {
	if x != nil {
		return x.EstimatedTime
	}
	return 0
}

// 请求消息
type SwapRequest struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	Chain                       string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	FromTokenAddress            string                 `protobuf:"bytes,2,opt,name=fromTokenAddress,proto3" json:"fromTokenAddress,omitempty"`
	AmountOutMin                string                 `protobuf:"bytes,3,opt,name=amountOutMin,proto3" json:"amountOutMin,omitempty"`
	ToAddress                   string                 `protobuf:"bytes,4,opt,name=toAddress,proto3" json:"toAddress,omitempty"`
	ToTokenChain                string                 `protobuf:"bytes,5,opt,name=toTokenChain,proto3" json:"toTokenChain,omitempty"`
	FromTokenAmount             string                 `protobuf:"bytes,6,opt,name=fromTokenAmount,proto3" json:"fromTokenAmount,omitempty"`
	FromTokenChain              string                 `protobuf:"bytes,7,opt,name=fromTokenChain,proto3" json:"fromTokenChain,omitempty"`
	ToTokenAddress              string                 `protobuf:"bytes,8,opt,name=toTokenAddress,proto3" json:"toTokenAddress,omitempty"`
	FromAddress                 string                 `protobuf:"bytes,9,opt,name=fromAddress,proto3" json:"fromAddress,omitempty"`
	FromCoinCode                string                 `protobuf:"bytes,10,opt,name=fromCoinCode,proto3" json:"fromCoinCode,omitempty"`
	ToCoinCode                  string                 `protobuf:"bytes,11,opt,name=toCoinCode,proto3" json:"toCoinCode,omitempty"`
	SourceType                  string                 `protobuf:"bytes,12,opt,name=sourceType,proto3" json:"sourceType,omitempty"`
	Slippage                    string                 `protobuf:"bytes,13,opt,name=slippage,proto3" json:"slippage,omitempty"`
	Fee                         string                 `protobuf:"bytes,14,opt,name=fee,proto3" json:"fee,omitempty"`
	FeeReceivingAddress         string                 `protobuf:"bytes,15,opt,name=feeReceivingAddress,proto3" json:"feeReceivingAddress,omitempty"`
	FromBridgersContractAddress string                 `protobuf:"bytes,16,opt,name=fromBridgersContractAddress,proto3" json:"fromBridgersContractAddress,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *SwapRequest) Reset() {
	*x = SwapRequest{}
	mi := &file_edge_v1_edge_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapRequest) ProtoMessage() {}

func (x *SwapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edge_v1_edge_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapRequest.ProtoReflect.Descriptor instead.
func (*SwapRequest) Descriptor() ([]byte, []int) {
	return file_edge_v1_edge_proto_rawDescGZIP(), []int{10}
}

func (x *SwapRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *SwapRequest) GetFromTokenAddress() string {
	if x != nil {
		return x.FromTokenAddress
	}
	return ""
}

func (x *SwapRequest) GetAmountOutMin() string {
	if x != nil {
		return x.AmountOutMin
	}
	return ""
}

func (x *SwapRequest) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *SwapRequest) GetToTokenChain() string {
	if x != nil {
		return x.ToTokenChain
	}
	return ""
}

func (x *SwapRequest) GetFromTokenAmount() string {
	if x != nil {
		return x.FromTokenAmount
	}
	return ""
}

func (x *SwapRequest) GetFromTokenChain() string {
	if x != nil {
		return x.FromTokenChain
	}
	return ""
}

func (x *SwapRequest) GetToTokenAddress() string {
	if x != nil {
		return x.ToTokenAddress
	}
	return ""
}

func (x *SwapRequest) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *SwapRequest) GetFromCoinCode() string {
	if x != nil {
		return x.FromCoinCode
	}
	return ""
}

func (x *SwapRequest) GetToCoinCode() string {
	if x != nil {
		return x.ToCoinCode
	}
	return ""
}

func (x *SwapRequest) GetSourceType() string {
	if x != nil {
		return x.SourceType
	}
	return ""
}

func (x *SwapRequest) GetSlippage() string {
	if x != nil {
		return x.Slippage
	}
	return ""
}

func (x *SwapRequest) GetFee() string {
	if x != nil {
		return x.Fee
	}
	return ""
}

func (x *SwapRequest) GetFeeReceivingAddress() string {
	if x != nil {
		return x.FeeReceivingAddress
	}
	return ""
}

func (x *SwapRequest) GetFromBridgersContractAddress() string {
	if x != nil {
		return x.FromBridgersContractAddress
	}
	return ""
}

// 响应消息
type SwapReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxHash        string                 `protobuf:"bytes,1,opt,name=txHash,proto3" json:"txHash,omitempty"`
	OrderId       string                 `protobuf:"bytes,2,opt,name=orderId,proto3" json:"orderId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwapReply) Reset() {
	*x = SwapReply{}
	mi := &file_edge_v1_edge_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwapReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapReply) ProtoMessage() {}

func (x *SwapReply) ProtoReflect() protoreflect.Message {
	mi := &file_edge_v1_edge_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapReply.ProtoReflect.Descriptor instead.
func (*SwapReply) Descriptor() ([]byte, []int) {
	return file_edge_v1_edge_proto_rawDescGZIP(), []int{11}
}

func (x *SwapReply) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *SwapReply) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

var File_edge_v1_edge_proto protoreflect.FileDescriptor

var file_edge_v1_edge_proto_rawDesc = string([]byte{
	0x0a, 0x12, 0x65, 0x64, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x22, 0x4e, 0x0a, 0x1c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c,
	0x69, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x46, 0x0a, 0x1d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c,
	0x69, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x45, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x06, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x22, 0x47, 0x0a,
	0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x28, 0x0a, 0x0f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x2e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x42, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x22, 0x42, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x42, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2a,
	0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0xe1, 0x01, 0x0a, 0x05, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x52, 0x49, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c,
	0x6f, 0x67, 0x6f, 0x55, 0x52, 0x49, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73, 0x43, 0x72, 0x6f, 0x73,
	0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69,
	0x73, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x47, 0x61, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x47, 0x61, 0x73, 0x22, 0xf7,
	0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x72,
	0x6f, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26,
	0x0a, 0x0e, 0x74, 0x6f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x6f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x74, 0x6f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x22, 0xf1, 0x03, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x4d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x4d, 0x69, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x46, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x46, 0x65, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d,
	0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x4d, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d,
	0x61, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x4d, 0x61, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x64, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x65, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66,
	0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a,
	0x0a, 0x10, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x74, 0x6f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x6f, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07,
	0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c,
	0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65,
	0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xd7, 0x04, 0x0a,
	0x0b, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x72,
	0x6f, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x4d, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x4d,
	0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66,
	0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26,
	0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x74, 0x6f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x69, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x43, 0x6f, 0x69, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x43, 0x6f, 0x69, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6c, 0x69, 0x70, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6c, 0x69, 0x70, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66,
	0x65, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x66, 0x65, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69,
	0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x66, 0x65, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x40, 0x0a, 0x1b, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x66, 0x72, 0x6f, 0x6d, 0x42,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x3d, 0x0a, 0x09, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x32, 0xbf, 0x03, 0x0a, 0x04, 0x45, 0x64, 0x67, 0x65, 0x12, 0x70,
	0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x6c, 0x61, 0x63, 0x6b,
	0x6c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x64, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x42, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x42, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12,
	0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x51,
	0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x04, 0x53,
	0x77, 0x61, 0x70, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x77, 0x61, 0x70,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x35, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x24, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x64, 0x67, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_edge_v1_edge_proto_rawDescOnce sync.Once
	file_edge_v1_edge_proto_rawDescData []byte
)

func file_edge_v1_edge_proto_rawDescGZIP() []byte {
	file_edge_v1_edge_proto_rawDescOnce.Do(func() {
		file_edge_v1_edge_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_edge_v1_edge_proto_rawDesc), len(file_edge_v1_edge_proto_rawDesc)))
	})
	return file_edge_v1_edge_proto_rawDescData
}

var file_edge_v1_edge_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_edge_v1_edge_proto_goTypes = []any{
	(*CheckBlacklistAddressRequest)(nil),  // 0: api.edge.v1.CheckBlacklistAddressRequest
	(*CheckBlacklistAddressResponse)(nil), // 1: api.edge.v1.CheckBlacklistAddressResponse
	(*GetSupportedChainsRequest)(nil),     // 2: api.edge.v1.GetSupportedChainsRequest
	(*GetSupportedChainsReply)(nil),       // 3: api.edge.v1.GetSupportedChainsReply
	(*Chain)(nil),                         // 4: api.edge.v1.Chain
	(*GetTokenByChainRequest)(nil),        // 5: api.edge.v1.GetTokenByChainRequest
	(*GetTokenByChainReply)(nil),          // 6: api.edge.v1.GetTokenByChainReply
	(*Token)(nil),                         // 7: api.edge.v1.Token
	(*GetQuoteRequest)(nil),               // 8: api.edge.v1.GetQuoteRequest
	(*GetQuoteReply)(nil),                 // 9: api.edge.v1.GetQuoteReply
	(*SwapRequest)(nil),                   // 10: api.edge.v1.SwapRequest
	(*SwapReply)(nil),                     // 11: api.edge.v1.SwapReply
}
var file_edge_v1_edge_proto_depIdxs = []int32{
	4,  // 0: api.edge.v1.GetSupportedChainsReply.chains:type_name -> api.edge.v1.Chain
	7,  // 1: api.edge.v1.GetTokenByChainReply.tokens:type_name -> api.edge.v1.Token
	0,  // 2: api.edge.v1.Edge.CheckBlacklistAddress:input_type -> api.edge.v1.CheckBlacklistAddressRequest
	2,  // 3: api.edge.v1.Edge.GetSupportedChains:input_type -> api.edge.v1.GetSupportedChainsRequest
	5,  // 4: api.edge.v1.Edge.GetTokenByChain:input_type -> api.edge.v1.GetTokenByChainRequest
	8,  // 5: api.edge.v1.Edge.GetQuote:input_type -> api.edge.v1.GetQuoteRequest
	10, // 6: api.edge.v1.Edge.Swap:input_type -> api.edge.v1.SwapRequest
	1,  // 7: api.edge.v1.Edge.CheckBlacklistAddress:output_type -> api.edge.v1.CheckBlacklistAddressResponse
	3,  // 8: api.edge.v1.Edge.GetSupportedChains:output_type -> api.edge.v1.GetSupportedChainsReply
	6,  // 9: api.edge.v1.Edge.GetTokenByChain:output_type -> api.edge.v1.GetTokenByChainReply
	9,  // 10: api.edge.v1.Edge.GetQuote:output_type -> api.edge.v1.GetQuoteReply
	11, // 11: api.edge.v1.Edge.Swap:output_type -> api.edge.v1.SwapReply
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_edge_v1_edge_proto_init() }
func file_edge_v1_edge_proto_init() {
	if File_edge_v1_edge_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_edge_v1_edge_proto_rawDesc), len(file_edge_v1_edge_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_edge_v1_edge_proto_goTypes,
		DependencyIndexes: file_edge_v1_edge_proto_depIdxs,
		MessageInfos:      file_edge_v1_edge_proto_msgTypes,
	}.Build()
	File_edge_v1_edge_proto = out.File
	file_edge_v1_edge_proto_goTypes = nil
	file_edge_v1_edge_proto_depIdxs = nil
}
