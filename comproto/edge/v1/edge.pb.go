// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: comproto/edge/v1/edge.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 黑名单地址检查请求
type CheckBlacklistAddressRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chain         string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`     // 链名称
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"` // 待检查的地址
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckBlacklistAddressRequest) Reset() {
	*x = CheckBlacklistAddressRequest{}
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckBlacklistAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckBlacklistAddressRequest) ProtoMessage() {}

func (x *CheckBlacklistAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckBlacklistAddressRequest.ProtoReflect.Descriptor instead.
func (*CheckBlacklistAddressRequest) Descriptor() ([]byte, []int) {
	return file_comproto_edge_v1_edge_proto_rawDescGZIP(), []int{0}
}

func (x *CheckBlacklistAddressRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *CheckBlacklistAddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// 黑名单地址检查响应
type CheckBlacklistAddressResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsBlacklisted bool                   `protobuf:"varint,1,opt,name=is_blacklisted,json=isBlacklisted,proto3" json:"is_blacklisted,omitempty"` // 是否在黑名单中
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckBlacklistAddressResponse) Reset() {
	*x = CheckBlacklistAddressResponse{}
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckBlacklistAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckBlacklistAddressResponse) ProtoMessage() {}

func (x *CheckBlacklistAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckBlacklistAddressResponse.ProtoReflect.Descriptor instead.
func (*CheckBlacklistAddressResponse) Descriptor() ([]byte, []int) {
	return file_comproto_edge_v1_edge_proto_rawDescGZIP(), []int{1}
}

func (x *CheckBlacklistAddressResponse) GetIsBlacklisted() bool {
	if x != nil {
		return x.IsBlacklisted
	}
	return false
}

// 请求消息
type GetSupportedChainsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSupportedChainsRequest) Reset() {
	*x = GetSupportedChainsRequest{}
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSupportedChainsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSupportedChainsRequest) ProtoMessage() {}

func (x *GetSupportedChainsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSupportedChainsRequest.ProtoReflect.Descriptor instead.
func (*GetSupportedChainsRequest) Descriptor() ([]byte, []int) {
	return file_comproto_edge_v1_edge_proto_rawDescGZIP(), []int{2}
}

// 响应消息
type GetSupportedChainsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chains        []*Chain               `protobuf:"bytes,1,rep,name=chains,proto3" json:"chains,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSupportedChainsReply) Reset() {
	*x = GetSupportedChainsReply{}
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSupportedChainsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSupportedChainsReply) ProtoMessage() {}

func (x *GetSupportedChainsReply) ProtoReflect() protoreflect.Message {
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSupportedChainsReply.ProtoReflect.Descriptor instead.
func (*GetSupportedChainsReply) Descriptor() ([]byte, []int) {
	return file_comproto_edge_v1_edge_proto_rawDescGZIP(), []int{3}
}

func (x *GetSupportedChainsReply) GetChains() []*Chain {
	if x != nil {
		return x.Chains
	}
	return nil
}

type Chain struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Chain           string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`                     //链名
	ContractAddress string                 `protobuf:"bytes,2,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"` //bridgers合约地址
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Chain) Reset() {
	*x = Chain{}
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chain) ProtoMessage() {}

func (x *Chain) ProtoReflect() protoreflect.Message {
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chain.ProtoReflect.Descriptor instead.
func (*Chain) Descriptor() ([]byte, []int) {
	return file_comproto_edge_v1_edge_proto_rawDescGZIP(), []int{4}
}

func (x *Chain) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *Chain) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

// 请求消息
type GetTokenByChainRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chain         string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTokenByChainRequest) Reset() {
	*x = GetTokenByChainRequest{}
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenByChainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenByChainRequest) ProtoMessage() {}

func (x *GetTokenByChainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenByChainRequest.ProtoReflect.Descriptor instead.
func (*GetTokenByChainRequest) Descriptor() ([]byte, []int) {
	return file_comproto_edge_v1_edge_proto_rawDescGZIP(), []int{5}
}

func (x *GetTokenByChainRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

// 响应消息
type GetTokenByChainReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tokens        []*Token               `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTokenByChainReply) Reset() {
	*x = GetTokenByChainReply{}
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenByChainReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenByChainReply) ProtoMessage() {}

func (x *GetTokenByChainReply) ProtoReflect() protoreflect.Message {
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenByChainReply.ProtoReflect.Descriptor instead.
func (*GetTokenByChainReply) Descriptor() ([]byte, []int) {
	return file_comproto_edge_v1_edge_proto_rawDescGZIP(), []int{6}
}

func (x *GetTokenByChainReply) GetTokens() []*Token {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type Token struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chain         string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`        //链名
	Symbol        string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`      // 币种编码
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`          //币种名称
	Address       string                 `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`    //币种合约地址
	Decimals      uint32                 `protobuf:"varint,5,opt,name=decimals,proto3" json:"decimals,omitempty"` //精度
	LogoURI       string                 `protobuf:"bytes,6,opt,name=logoURI,proto3" json:"logoURI,omitempty"`
	IsCrossEnable int32                  `protobuf:"varint,7,opt,name=isCrossEnable,proto3" json:"isCrossEnable,omitempty"`
	WithdrawGas   uint32                 `protobuf:"varint,8,opt,name=withdrawGas,proto3" json:"withdrawGas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Token) Reset() {
	*x = Token{}
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_comproto_edge_v1_edge_proto_rawDescGZIP(), []int{7}
}

func (x *Token) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *Token) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Token) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Token) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Token) GetDecimals() uint32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *Token) GetLogoURI() string {
	if x != nil {
		return x.LogoURI
	}
	return ""
}

func (x *Token) GetIsCrossEnable() int32 {
	if x != nil {
		return x.IsCrossEnable
	}
	return 0
}

func (x *Token) GetWithdrawGas() uint32 {
	if x != nil {
		return x.WithdrawGas
	}
	return 0
}

// 请求消息
type GetQuoteRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	FromTokenAddress string                 `protobuf:"bytes,1,opt,name=fromTokenAddress,proto3" json:"fromTokenAddress,omitempty"` //出售币种合约地址（可通过获取币种列表中的address字段获得）
	ToTokenAddress   string                 `protobuf:"bytes,2,opt,name=toTokenAddress,proto3" json:"toTokenAddress,omitempty"`     //获得币种合约地址（可通过获取币种列表中的address字段获得）
	FromTokenAmount  string                 `protobuf:"bytes,3,opt,name=fromTokenAmount,proto3" json:"fromTokenAmount,omitempty"`   //出售币种数量(带精度)
	FromTokenChain   string                 `protobuf:"bytes,4,opt,name=fromTokenChain,proto3" json:"fromTokenChain,omitempty"`     //出售币种链（可通过获取币种列表中的chain字段获得,详细支持链的情况可查看【基本说明】）
	ToTokenChain     string                 `protobuf:"bytes,5,opt,name=toTokenChain,proto3" json:"toTokenChain,omitempty"`         //获得币种链（可通过获取币种列表中的chain字段获得，详细支持链的情况可查看【基本说明】）
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetQuoteRequest) Reset() {
	*x = GetQuoteRequest{}
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuoteRequest) ProtoMessage() {}

func (x *GetQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuoteRequest.ProtoReflect.Descriptor instead.
func (*GetQuoteRequest) Descriptor() ([]byte, []int) {
	return file_comproto_edge_v1_edge_proto_rawDescGZIP(), []int{8}
}

func (x *GetQuoteRequest) GetFromTokenAddress() string {
	if x != nil {
		return x.FromTokenAddress
	}
	return ""
}

func (x *GetQuoteRequest) GetToTokenAddress() string {
	if x != nil {
		return x.ToTokenAddress
	}
	return ""
}

func (x *GetQuoteRequest) GetFromTokenAmount() string {
	if x != nil {
		return x.FromTokenAmount
	}
	return ""
}

func (x *GetQuoteRequest) GetFromTokenChain() string {
	if x != nil {
		return x.FromTokenChain
	}
	return ""
}

func (x *GetQuoteRequest) GetToTokenChain() string {
	if x != nil {
		return x.ToTokenChain
	}
	return ""
}

// 响应消息
type GetQuoteReply struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	AmountOutMin     string                 `protobuf:"bytes,1,opt,name=amountOutMin,proto3" json:"amountOutMin,omitempty"`       // 发币数量 带精度
	ChainFee         string                 `protobuf:"bytes,2,opt,name=chainFee,proto3" json:"chainFee,omitempty"`               // 链上矿工费
	ContractAddress  string                 `protobuf:"bytes,3,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"` // bridgers合约地址
	DepositMin       string                 `protobuf:"bytes,4,opt,name=depositMin,proto3" json:"depositMin,omitempty"`           //兑换范围最小值 若用户兑换值小于该值，将不能兑换得到目标币
	DepositMax       string                 `protobuf:"bytes,5,opt,name=depositMax,proto3" json:"depositMax,omitempty"`           //兑换范围最大值 若用户兑换的值大于该值，将只能得到该值兑换所能得到的目标币种数量
	Dex              string                 `protobuf:"bytes,6,opt,name=dex,proto3" json:"dex,omitempty"`                         // DEX名称
	Fee              float32                `protobuf:"fixed32,7,opt,name=fee,proto3" json:"fee,omitempty"`                       // 手续费比例
	FeeToken         string                 `protobuf:"bytes,8,opt,name=feeToken,proto3" json:"feeToken,omitempty"`
	FromTokenAmount  string                 `protobuf:"bytes,9,opt,name=fromTokenAmount,proto3" json:"fromTokenAmount,omitempty"`
	FromTokenDecimal int32                  `protobuf:"varint,10,opt,name=fromTokenDecimal,proto3" json:"fromTokenDecimal,omitempty"`
	ToTokenAmount    string                 `protobuf:"bytes,11,opt,name=toTokenAmount,proto3" json:"toTokenAmount,omitempty"` // 发币数量 不带精度
	ToTokenDecimal   int32                  `protobuf:"varint,12,opt,name=toTokenDecimal,proto3" json:"toTokenDecimal,omitempty"`
	Path             []string               `protobuf:"bytes,13,rep,name=path,proto3" json:"path,omitempty"`
	LogoUrl          string                 `protobuf:"bytes,14,opt,name=logoUrl,proto3" json:"logoUrl,omitempty"`
	EstimatedTime    int64                  `protobuf:"varint,15,opt,name=estimatedTime,proto3" json:"estimatedTime,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetQuoteReply) Reset() {
	*x = GetQuoteReply{}
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuoteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuoteReply) ProtoMessage() {}

func (x *GetQuoteReply) ProtoReflect() protoreflect.Message {
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuoteReply.ProtoReflect.Descriptor instead.
func (*GetQuoteReply) Descriptor() ([]byte, []int) {
	return file_comproto_edge_v1_edge_proto_rawDescGZIP(), []int{9}
}

func (x *GetQuoteReply) GetAmountOutMin() string {
	if x != nil {
		return x.AmountOutMin
	}
	return ""
}

func (x *GetQuoteReply) GetChainFee() string {
	if x != nil {
		return x.ChainFee
	}
	return ""
}

func (x *GetQuoteReply) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *GetQuoteReply) GetDepositMin() string {
	if x != nil {
		return x.DepositMin
	}
	return ""
}

func (x *GetQuoteReply) GetDepositMax() string {
	if x != nil {
		return x.DepositMax
	}
	return ""
}

func (x *GetQuoteReply) GetDex() string {
	if x != nil {
		return x.Dex
	}
	return ""
}

func (x *GetQuoteReply) GetFee() float32 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *GetQuoteReply) GetFeeToken() string {
	if x != nil {
		return x.FeeToken
	}
	return ""
}

func (x *GetQuoteReply) GetFromTokenAmount() string {
	if x != nil {
		return x.FromTokenAmount
	}
	return ""
}

func (x *GetQuoteReply) GetFromTokenDecimal() int32 {
	if x != nil {
		return x.FromTokenDecimal
	}
	return 0
}

func (x *GetQuoteReply) GetToTokenAmount() string {
	if x != nil {
		return x.ToTokenAmount
	}
	return ""
}

func (x *GetQuoteReply) GetToTokenDecimal() int32 {
	if x != nil {
		return x.ToTokenDecimal
	}
	return 0
}

func (x *GetQuoteReply) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *GetQuoteReply) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *GetQuoteReply) GetEstimatedTime() int64 {
	if x != nil {
		return x.EstimatedTime
	}
	return 0
}

// 请求消息
type SwapRequest struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	FromTokenAddress            string                 `protobuf:"bytes,1,opt,name=fromTokenAddress,proto3" json:"fromTokenAddress,omitempty"`                        //出售币种合约地址（可通过获取币种列表中的address字段获得）
	AmountOutMin                string                 `protobuf:"bytes,2,opt,name=amountOutMin,proto3" json:"amountOutMin,omitempty"`                                //出售币种数量(带精度，可通过询价接口里的fromTokenAmount字段获得)
	ToAddress                   string                 `protobuf:"bytes,3,opt,name=toAddress,proto3" json:"toAddress,omitempty"`                                      //接受地址
	ToTokenChain                string                 `protobuf:"bytes,4,opt,name=toTokenChain,proto3" json:"toTokenChain,omitempty"`                                //获得币种链（可通过获取币种列表中的chain字段获得，详细支持链的情况可查看【基本说明】）
	FromTokenAmount             string                 `protobuf:"bytes,5,opt,name=fromTokenAmount,proto3" json:"fromTokenAmount,omitempty"`                          //出售币种数量(带精度，可通过询价接口里的fromTokenAmount字段获得)
	FromTokenChain              string                 `protobuf:"bytes,6,opt,name=fromTokenChain,proto3" json:"fromTokenChain,omitempty"`                            //出售币种链（可通过获取币种列表中的chain字段获得，详细支持链的情况可查看【基本说明】）
	ToTokenAddress              string                 `protobuf:"bytes,7,opt,name=toTokenAddress,proto3" json:"toTokenAddress,omitempty"`                            //获得币种合约地址（可通过获取币种列表中的address字段获得）
	StorageId                   string                 `protobuf:"bytes,8,opt,name=storageId,proto3" json:"storageId,omitempty"`                                      //
	FromCoinCode                string                 `protobuf:"bytes,9,opt,name=fromCoinCode,proto3" json:"fromCoinCode,omitempty"`                                //出售代币名称（可通过获取币种列表中的symbol字段获得）
	ToCoinCode                  string                 `protobuf:"bytes,10,opt,name=toCoinCode,proto3" json:"toCoinCode,omitempty"`                                   //获得代币名称（可通过获取币种列表中的symbol字段获得）
	OrderCallbackUrl            string                 `protobuf:"bytes,11,opt,name=orderCallbackUrl,proto3" json:"orderCallbackUrl,omitempty"`                       //订单回调地址
	Slippage                    string                 `protobuf:"bytes,12,opt,name=slippage,proto3" json:"slippage,omitempty"`                                       //滑点，例如：0.1（代表10%）
	Fee                         string                 `protobuf:"bytes,13,opt,name=fee,proto3" json:"fee,omitempty"`                                                 //内扣手续费，例如：0.1（代表10%）
	FeeReceivingAddress         string                 `protobuf:"bytes,14,opt,name=feeReceivingAddress,proto3" json:"feeReceivingAddress,omitempty"`                 //内扣手续费接收地址
	FromBridgersContractAddress string                 `protobuf:"bytes,15,opt,name=fromBridgersContractAddress,proto3" json:"fromBridgersContractAddress,omitempty"` //出售币种bridgers合约地址
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *SwapRequest) Reset() {
	*x = SwapRequest{}
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapRequest) ProtoMessage() {}

func (x *SwapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapRequest.ProtoReflect.Descriptor instead.
func (*SwapRequest) Descriptor() ([]byte, []int) {
	return file_comproto_edge_v1_edge_proto_rawDescGZIP(), []int{10}
}

func (x *SwapRequest) GetFromTokenAddress() string {
	if x != nil {
		return x.FromTokenAddress
	}
	return ""
}

func (x *SwapRequest) GetAmountOutMin() string {
	if x != nil {
		return x.AmountOutMin
	}
	return ""
}

func (x *SwapRequest) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *SwapRequest) GetToTokenChain() string {
	if x != nil {
		return x.ToTokenChain
	}
	return ""
}

func (x *SwapRequest) GetFromTokenAmount() string {
	if x != nil {
		return x.FromTokenAmount
	}
	return ""
}

func (x *SwapRequest) GetFromTokenChain() string {
	if x != nil {
		return x.FromTokenChain
	}
	return ""
}

func (x *SwapRequest) GetToTokenAddress() string {
	if x != nil {
		return x.ToTokenAddress
	}
	return ""
}

func (x *SwapRequest) GetStorageId() string {
	if x != nil {
		return x.StorageId
	}
	return ""
}

func (x *SwapRequest) GetFromCoinCode() string {
	if x != nil {
		return x.FromCoinCode
	}
	return ""
}

func (x *SwapRequest) GetToCoinCode() string {
	if x != nil {
		return x.ToCoinCode
	}
	return ""
}

func (x *SwapRequest) GetOrderCallbackUrl() string {
	if x != nil {
		return x.OrderCallbackUrl
	}
	return ""
}

func (x *SwapRequest) GetSlippage() string {
	if x != nil {
		return x.Slippage
	}
	return ""
}

func (x *SwapRequest) GetFee() string {
	if x != nil {
		return x.Fee
	}
	return ""
}

func (x *SwapRequest) GetFeeReceivingAddress() string {
	if x != nil {
		return x.FeeReceivingAddress
	}
	return ""
}

func (x *SwapRequest) GetFromBridgersContractAddress() string {
	if x != nil {
		return x.FromBridgersContractAddress
	}
	return ""
}

// 响应消息
type SwapReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SwapHash      string                 `protobuf:"bytes,1,opt,name=swapHash,proto3" json:"swapHash,omitempty"` // 跨链hash
	FeeHash       string                 `protobuf:"bytes,2,opt,name=feeHash,proto3" json:"feeHash,omitempty"`   // 内扣手续费hash
	OrderId       string                 `protobuf:"bytes,3,opt,name=orderId,proto3" json:"orderId,omitempty"`   // 订单号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwapReply) Reset() {
	*x = SwapReply{}
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwapReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapReply) ProtoMessage() {}

func (x *SwapReply) ProtoReflect() protoreflect.Message {
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapReply.ProtoReflect.Descriptor instead.
func (*SwapReply) Descriptor() ([]byte, []int) {
	return file_comproto_edge_v1_edge_proto_rawDescGZIP(), []int{11}
}

func (x *SwapReply) GetSwapHash() string {
	if x != nil {
		return x.SwapHash
	}
	return ""
}

func (x *SwapReply) GetFeeHash() string {
	if x != nil {
		return x.FeeHash
	}
	return ""
}

func (x *SwapReply) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

// 请求消息
type OrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"` // 订单号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderRequest) Reset() {
	*x = OrderRequest{}
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRequest) ProtoMessage() {}

func (x *OrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRequest.ProtoReflect.Descriptor instead.
func (*OrderRequest) Descriptor() ([]byte, []int) {
	return file_comproto_edge_v1_edge_proto_rawDescGZIP(), []int{12}
}

func (x *OrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

// 响应消息
type OrderReply struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                  // 订单ID
	OrderId            string                 `protobuf:"bytes,2,opt,name=orderId,proto3" json:"orderId,omitempty"`                        // 订单号
	FromTokenAddress   string                 `protobuf:"bytes,3,opt,name=fromTokenAddress,proto3" json:"fromTokenAddress,omitempty"`      // 出售币种的合约地址
	ToTokenAddress     string                 `protobuf:"bytes,4,opt,name=toTokenAddress,proto3" json:"toTokenAddress,omitempty"`          // 目标币种的合约地址
	FromTokenAmount    string                 `protobuf:"bytes,5,opt,name=fromTokenAmount,proto3" json:"fromTokenAmount,omitempty"`        // 出售币种数量
	ToTokenAmount      string                 `protobuf:"bytes,6,opt,name=toTokenAmount,proto3" json:"toTokenAmount,omitempty"`            // 目标币种预计得到数量
	FromAddress        string                 `protobuf:"bytes,7,opt,name=fromAddress,proto3" json:"fromAddress,omitempty"`                // 用户出售币种的地址
	Slippage           string                 `protobuf:"bytes,8,opt,name=slippage,proto3" json:"slippage,omitempty"`                      // 滑点
	FromChain          string                 `protobuf:"bytes,9,opt,name=fromChain,proto3" json:"fromChain,omitempty"`                    // 出售币种的链
	ToChain            string                 `protobuf:"bytes,10,opt,name=toChain,proto3" json:"toChain,omitempty"`                       // 目标币种的链
	Hash               string                 `protobuf:"bytes,11,opt,name=hash,proto3" json:"hash,omitempty"`                             // 存币hash
	DepositHashExplore string                 `protobuf:"bytes,12,opt,name=depositHashExplore,proto3" json:"depositHashExplore,omitempty"` // 存币区块浏览器地址
	DexName            string                 `protobuf:"bytes,13,opt,name=dexName,proto3" json:"dexName,omitempty"`                       // DEX名称
	Status             string                 `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`                         // 订单状态
	CreateTime         string                 `protobuf:"bytes,15,opt,name=createTime,proto3" json:"createTime,omitempty"`                 // 订单创建时间
	Source             string                 `protobuf:"bytes,16,opt,name=source,proto3" json:"source,omitempty"`                         // 渠道
	ToAddress          string                 `protobuf:"bytes,17,opt,name=toAddress,proto3" json:"toAddress,omitempty"`                   // 目标地址
	ToHash             string                 `protobuf:"bytes,18,opt,name=toHash,proto3" json:"toHash,omitempty"`                         // 发币hash
	ReceiveHashExplore string                 `protobuf:"bytes,19,opt,name=receiveHashExplore,proto3" json:"receiveHashExplore,omitempty"` // 发币区块浏览器地址
	EquipmentNo        string                 `protobuf:"bytes,20,opt,name=equipmentNo,proto3" json:"equipmentNo,omitempty"`               // 设备号
	RefundCoinAmt      string                 `protobuf:"bytes,21,opt,name=refundCoinAmt,proto3" json:"refundCoinAmt,omitempty"`           // 退币数量
	RefundHash         string                 `protobuf:"bytes,22,opt,name=refundHash,proto3" json:"refundHash,omitempty"`                 // 退币hash
	RefundHashExplore  string                 `protobuf:"bytes,23,opt,name=refundHashExplore,proto3" json:"refundHashExplore,omitempty"`   // 退币区块浏览器地址
	RefundReason       string                 `protobuf:"bytes,24,opt,name=refundReason,proto3" json:"refundReason,omitempty"`             // 退币原因（1-流动性不足、2-误差超过阈值、3-原币维护、4-黑名单、5-目标币维护、6-兑换数量不在范围内、7-存币超时、8-与风险地址交互）
	FromCoinCode       string                 `protobuf:"bytes,25,opt,name=fromCoinCode,proto3" json:"fromCoinCode,omitempty"`             // 出售币种
	ToCoinCode         string                 `protobuf:"bytes,26,opt,name=toCoinCode,proto3" json:"toCoinCode,omitempty"`                 // 目标币种
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *OrderReply) Reset() {
	*x = OrderReply{}
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderReply) ProtoMessage() {}

func (x *OrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_comproto_edge_v1_edge_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderReply.ProtoReflect.Descriptor instead.
func (*OrderReply) Descriptor() ([]byte, []int) {
	return file_comproto_edge_v1_edge_proto_rawDescGZIP(), []int{13}
}

func (x *OrderReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderReply) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *OrderReply) GetFromTokenAddress() string {
	if x != nil {
		return x.FromTokenAddress
	}
	return ""
}

func (x *OrderReply) GetToTokenAddress() string {
	if x != nil {
		return x.ToTokenAddress
	}
	return ""
}

func (x *OrderReply) GetFromTokenAmount() string {
	if x != nil {
		return x.FromTokenAmount
	}
	return ""
}

func (x *OrderReply) GetToTokenAmount() string {
	if x != nil {
		return x.ToTokenAmount
	}
	return ""
}

func (x *OrderReply) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *OrderReply) GetSlippage() string {
	if x != nil {
		return x.Slippage
	}
	return ""
}

func (x *OrderReply) GetFromChain() string {
	if x != nil {
		return x.FromChain
	}
	return ""
}

func (x *OrderReply) GetToChain() string {
	if x != nil {
		return x.ToChain
	}
	return ""
}

func (x *OrderReply) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *OrderReply) GetDepositHashExplore() string {
	if x != nil {
		return x.DepositHashExplore
	}
	return ""
}

func (x *OrderReply) GetDexName() string {
	if x != nil {
		return x.DexName
	}
	return ""
}

func (x *OrderReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OrderReply) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *OrderReply) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *OrderReply) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *OrderReply) GetToHash() string {
	if x != nil {
		return x.ToHash
	}
	return ""
}

func (x *OrderReply) GetReceiveHashExplore() string {
	if x != nil {
		return x.ReceiveHashExplore
	}
	return ""
}

func (x *OrderReply) GetEquipmentNo() string {
	if x != nil {
		return x.EquipmentNo
	}
	return ""
}

func (x *OrderReply) GetRefundCoinAmt() string {
	if x != nil {
		return x.RefundCoinAmt
	}
	return ""
}

func (x *OrderReply) GetRefundHash() string {
	if x != nil {
		return x.RefundHash
	}
	return ""
}

func (x *OrderReply) GetRefundHashExplore() string {
	if x != nil {
		return x.RefundHashExplore
	}
	return ""
}

func (x *OrderReply) GetRefundReason() string {
	if x != nil {
		return x.RefundReason
	}
	return ""
}

func (x *OrderReply) GetFromCoinCode() string {
	if x != nil {
		return x.FromCoinCode
	}
	return ""
}

func (x *OrderReply) GetToCoinCode() string {
	if x != nil {
		return x.ToCoinCode
	}
	return ""
}

var File_comproto_edge_v1_edge_proto protoreflect.FileDescriptor

const file_comproto_edge_v1_edge_proto_rawDesc = "" +
	"\n" +
	"\x1bcomproto/edge/v1/edge.proto\x12\vapi.edge.v1\"N\n" +
	"\x1cCheckBlacklistAddressRequest\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\"F\n" +
	"\x1dCheckBlacklistAddressResponse\x12%\n" +
	"\x0eis_blacklisted\x18\x01 \x01(\bR\risBlacklisted\"\x1b\n" +
	"\x19GetSupportedChainsRequest\"E\n" +
	"\x17GetSupportedChainsReply\x12*\n" +
	"\x06chains\x18\x01 \x03(\v2\x12.api.edge.v1.ChainR\x06chains\"G\n" +
	"\x05Chain\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12(\n" +
	"\x0fcontractAddress\x18\x02 \x01(\tR\x0fcontractAddress\".\n" +
	"\x16GetTokenByChainRequest\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\"B\n" +
	"\x14GetTokenByChainReply\x12*\n" +
	"\x06tokens\x18\x01 \x03(\v2\x12.api.edge.v1.TokenR\x06tokens\"\xe1\x01\n" +
	"\x05Token\x12\x14\n" +
	"\x05chain\x18\x01 \x01(\tR\x05chain\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x18\n" +
	"\aaddress\x18\x04 \x01(\tR\aaddress\x12\x1a\n" +
	"\bdecimals\x18\x05 \x01(\rR\bdecimals\x12\x18\n" +
	"\alogoURI\x18\x06 \x01(\tR\alogoURI\x12$\n" +
	"\risCrossEnable\x18\a \x01(\x05R\risCrossEnable\x12 \n" +
	"\vwithdrawGas\x18\b \x01(\rR\vwithdrawGas\"\xdb\x01\n" +
	"\x0fGetQuoteRequest\x12*\n" +
	"\x10fromTokenAddress\x18\x01 \x01(\tR\x10fromTokenAddress\x12&\n" +
	"\x0etoTokenAddress\x18\x02 \x01(\tR\x0etoTokenAddress\x12(\n" +
	"\x0ffromTokenAmount\x18\x03 \x01(\tR\x0ffromTokenAmount\x12&\n" +
	"\x0efromTokenChain\x18\x04 \x01(\tR\x0efromTokenChain\x12\"\n" +
	"\ftoTokenChain\x18\x05 \x01(\tR\ftoTokenChain\"\xf1\x03\n" +
	"\rGetQuoteReply\x12\"\n" +
	"\famountOutMin\x18\x01 \x01(\tR\famountOutMin\x12\x1a\n" +
	"\bchainFee\x18\x02 \x01(\tR\bchainFee\x12(\n" +
	"\x0fcontractAddress\x18\x03 \x01(\tR\x0fcontractAddress\x12\x1e\n" +
	"\n" +
	"depositMin\x18\x04 \x01(\tR\n" +
	"depositMin\x12\x1e\n" +
	"\n" +
	"depositMax\x18\x05 \x01(\tR\n" +
	"depositMax\x12\x10\n" +
	"\x03dex\x18\x06 \x01(\tR\x03dex\x12\x10\n" +
	"\x03fee\x18\a \x01(\x02R\x03fee\x12\x1a\n" +
	"\bfeeToken\x18\b \x01(\tR\bfeeToken\x12(\n" +
	"\x0ffromTokenAmount\x18\t \x01(\tR\x0ffromTokenAmount\x12*\n" +
	"\x10fromTokenDecimal\x18\n" +
	" \x01(\x05R\x10fromTokenDecimal\x12$\n" +
	"\rtoTokenAmount\x18\v \x01(\tR\rtoTokenAmount\x12&\n" +
	"\x0etoTokenDecimal\x18\f \x01(\x05R\x0etoTokenDecimal\x12\x12\n" +
	"\x04path\x18\r \x03(\tR\x04path\x12\x18\n" +
	"\alogoUrl\x18\x0e \x01(\tR\alogoUrl\x12$\n" +
	"\restimatedTime\x18\x0f \x01(\x03R\restimatedTime\"\xc9\x04\n" +
	"\vSwapRequest\x12*\n" +
	"\x10fromTokenAddress\x18\x01 \x01(\tR\x10fromTokenAddress\x12\"\n" +
	"\famountOutMin\x18\x02 \x01(\tR\famountOutMin\x12\x1c\n" +
	"\ttoAddress\x18\x03 \x01(\tR\ttoAddress\x12\"\n" +
	"\ftoTokenChain\x18\x04 \x01(\tR\ftoTokenChain\x12(\n" +
	"\x0ffromTokenAmount\x18\x05 \x01(\tR\x0ffromTokenAmount\x12&\n" +
	"\x0efromTokenChain\x18\x06 \x01(\tR\x0efromTokenChain\x12&\n" +
	"\x0etoTokenAddress\x18\a \x01(\tR\x0etoTokenAddress\x12\x1c\n" +
	"\tstorageId\x18\b \x01(\tR\tstorageId\x12\"\n" +
	"\ffromCoinCode\x18\t \x01(\tR\ffromCoinCode\x12\x1e\n" +
	"\n" +
	"toCoinCode\x18\n" +
	" \x01(\tR\n" +
	"toCoinCode\x12*\n" +
	"\x10orderCallbackUrl\x18\v \x01(\tR\x10orderCallbackUrl\x12\x1a\n" +
	"\bslippage\x18\f \x01(\tR\bslippage\x12\x10\n" +
	"\x03fee\x18\r \x01(\tR\x03fee\x120\n" +
	"\x13feeReceivingAddress\x18\x0e \x01(\tR\x13feeReceivingAddress\x12@\n" +
	"\x1bfromBridgersContractAddress\x18\x0f \x01(\tR\x1bfromBridgersContractAddress\"[\n" +
	"\tSwapReply\x12\x1a\n" +
	"\bswapHash\x18\x01 \x01(\tR\bswapHash\x12\x18\n" +
	"\afeeHash\x18\x02 \x01(\tR\afeeHash\x12\x18\n" +
	"\aorderId\x18\x03 \x01(\tR\aorderId\"(\n" +
	"\fOrderRequest\x12\x18\n" +
	"\aorderId\x18\x01 \x01(\tR\aorderId\"\xe2\x06\n" +
	"\n" +
	"OrderReply\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\aorderId\x18\x02 \x01(\tR\aorderId\x12*\n" +
	"\x10fromTokenAddress\x18\x03 \x01(\tR\x10fromTokenAddress\x12&\n" +
	"\x0etoTokenAddress\x18\x04 \x01(\tR\x0etoTokenAddress\x12(\n" +
	"\x0ffromTokenAmount\x18\x05 \x01(\tR\x0ffromTokenAmount\x12$\n" +
	"\rtoTokenAmount\x18\x06 \x01(\tR\rtoTokenAmount\x12 \n" +
	"\vfromAddress\x18\a \x01(\tR\vfromAddress\x12\x1a\n" +
	"\bslippage\x18\b \x01(\tR\bslippage\x12\x1c\n" +
	"\tfromChain\x18\t \x01(\tR\tfromChain\x12\x18\n" +
	"\atoChain\x18\n" +
	" \x01(\tR\atoChain\x12\x12\n" +
	"\x04hash\x18\v \x01(\tR\x04hash\x12.\n" +
	"\x12depositHashExplore\x18\f \x01(\tR\x12depositHashExplore\x12\x18\n" +
	"\adexName\x18\r \x01(\tR\adexName\x12\x16\n" +
	"\x06status\x18\x0e \x01(\tR\x06status\x12\x1e\n" +
	"\n" +
	"createTime\x18\x0f \x01(\tR\n" +
	"createTime\x12\x16\n" +
	"\x06source\x18\x10 \x01(\tR\x06source\x12\x1c\n" +
	"\ttoAddress\x18\x11 \x01(\tR\ttoAddress\x12\x16\n" +
	"\x06toHash\x18\x12 \x01(\tR\x06toHash\x12.\n" +
	"\x12receiveHashExplore\x18\x13 \x01(\tR\x12receiveHashExplore\x12 \n" +
	"\vequipmentNo\x18\x14 \x01(\tR\vequipmentNo\x12$\n" +
	"\rrefundCoinAmt\x18\x15 \x01(\tR\rrefundCoinAmt\x12\x1e\n" +
	"\n" +
	"refundHash\x18\x16 \x01(\tR\n" +
	"refundHash\x12,\n" +
	"\x11refundHashExplore\x18\x17 \x01(\tR\x11refundHashExplore\x12\"\n" +
	"\frefundReason\x18\x18 \x01(\tR\frefundReason\x12\"\n" +
	"\ffromCoinCode\x18\x19 \x01(\tR\ffromCoinCode\x12\x1e\n" +
	"\n" +
	"toCoinCode\x18\x1a \x01(\tR\n" +
	"toCoinCode2\x89\x04\n" +
	"\x04Edge\x12p\n" +
	"\x15CheckBlacklistAddress\x12).api.edge.v1.CheckBlacklistAddressRequest\x1a*.api.edge.v1.CheckBlacklistAddressResponse\"\x00\x12d\n" +
	"\x12GetSupportedChains\x12&.api.edge.v1.GetSupportedChainsRequest\x1a$.api.edge.v1.GetSupportedChainsReply\"\x00\x12[\n" +
	"\x0fGetTokenByChain\x12#.api.edge.v1.GetTokenByChainRequest\x1a!.api.edge.v1.GetTokenByChainReply\"\x00\x12F\n" +
	"\bGetQuote\x12\x1c.api.edge.v1.GetQuoteRequest\x1a\x1a.api.edge.v1.GetQuoteReply\"\x00\x12:\n" +
	"\x04Swap\x12\x18.api.edge.v1.SwapRequest\x1a\x16.api.edge.v1.SwapReply\"\x00\x12H\n" +
	"\x10getTransDataById\x12\x19.api.edge.v1.OrderRequest\x1a\x17.api.edge.v1.OrderReply\"\x00B5\n" +
	"\vapi.edge.v1P\x01Z$asset_management_edge/api/edge/v1;v1b\x06proto3"

var (
	file_comproto_edge_v1_edge_proto_rawDescOnce sync.Once
	file_comproto_edge_v1_edge_proto_rawDescData []byte
)

func file_comproto_edge_v1_edge_proto_rawDescGZIP() []byte {
	file_comproto_edge_v1_edge_proto_rawDescOnce.Do(func() {
		file_comproto_edge_v1_edge_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_comproto_edge_v1_edge_proto_rawDesc), len(file_comproto_edge_v1_edge_proto_rawDesc)))
	})
	return file_comproto_edge_v1_edge_proto_rawDescData
}

var file_comproto_edge_v1_edge_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_comproto_edge_v1_edge_proto_goTypes = []any{
	(*CheckBlacklistAddressRequest)(nil),  // 0: api.edge.v1.CheckBlacklistAddressRequest
	(*CheckBlacklistAddressResponse)(nil), // 1: api.edge.v1.CheckBlacklistAddressResponse
	(*GetSupportedChainsRequest)(nil),     // 2: api.edge.v1.GetSupportedChainsRequest
	(*GetSupportedChainsReply)(nil),       // 3: api.edge.v1.GetSupportedChainsReply
	(*Chain)(nil),                         // 4: api.edge.v1.Chain
	(*GetTokenByChainRequest)(nil),        // 5: api.edge.v1.GetTokenByChainRequest
	(*GetTokenByChainReply)(nil),          // 6: api.edge.v1.GetTokenByChainReply
	(*Token)(nil),                         // 7: api.edge.v1.Token
	(*GetQuoteRequest)(nil),               // 8: api.edge.v1.GetQuoteRequest
	(*GetQuoteReply)(nil),                 // 9: api.edge.v1.GetQuoteReply
	(*SwapRequest)(nil),                   // 10: api.edge.v1.SwapRequest
	(*SwapReply)(nil),                     // 11: api.edge.v1.SwapReply
	(*OrderRequest)(nil),                  // 12: api.edge.v1.OrderRequest
	(*OrderReply)(nil),                    // 13: api.edge.v1.OrderReply
}
var file_comproto_edge_v1_edge_proto_depIdxs = []int32{
	4,  // 0: api.edge.v1.GetSupportedChainsReply.chains:type_name -> api.edge.v1.Chain
	7,  // 1: api.edge.v1.GetTokenByChainReply.tokens:type_name -> api.edge.v1.Token
	0,  // 2: api.edge.v1.Edge.CheckBlacklistAddress:input_type -> api.edge.v1.CheckBlacklistAddressRequest
	2,  // 3: api.edge.v1.Edge.GetSupportedChains:input_type -> api.edge.v1.GetSupportedChainsRequest
	5,  // 4: api.edge.v1.Edge.GetTokenByChain:input_type -> api.edge.v1.GetTokenByChainRequest
	8,  // 5: api.edge.v1.Edge.GetQuote:input_type -> api.edge.v1.GetQuoteRequest
	10, // 6: api.edge.v1.Edge.Swap:input_type -> api.edge.v1.SwapRequest
	12, // 7: api.edge.v1.Edge.getTransDataById:input_type -> api.edge.v1.OrderRequest
	1,  // 8: api.edge.v1.Edge.CheckBlacklistAddress:output_type -> api.edge.v1.CheckBlacklistAddressResponse
	3,  // 9: api.edge.v1.Edge.GetSupportedChains:output_type -> api.edge.v1.GetSupportedChainsReply
	6,  // 10: api.edge.v1.Edge.GetTokenByChain:output_type -> api.edge.v1.GetTokenByChainReply
	9,  // 11: api.edge.v1.Edge.GetQuote:output_type -> api.edge.v1.GetQuoteReply
	11, // 12: api.edge.v1.Edge.Swap:output_type -> api.edge.v1.SwapReply
	13, // 13: api.edge.v1.Edge.getTransDataById:output_type -> api.edge.v1.OrderReply
	8,  // [8:14] is the sub-list for method output_type
	2,  // [2:8] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_comproto_edge_v1_edge_proto_init() }
func file_comproto_edge_v1_edge_proto_init() {
	if File_comproto_edge_v1_edge_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_comproto_edge_v1_edge_proto_rawDesc), len(file_comproto_edge_v1_edge_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_comproto_edge_v1_edge_proto_goTypes,
		DependencyIndexes: file_comproto_edge_v1_edge_proto_depIdxs,
		MessageInfos:      file_comproto_edge_v1_edge_proto_msgTypes,
	}.Build()
	File_comproto_edge_v1_edge_proto = out.File
	file_comproto_edge_v1_edge_proto_goTypes = nil
	file_comproto_edge_v1_edge_proto_depIdxs = nil
}
