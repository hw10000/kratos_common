// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: block_subscribe/v1/block_subscribe.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MetadataItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`         //链名称
	Symbol        string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`     //链符号
	Networks      []*NetworkItem         `protobuf:"bytes,3,rep,name=networks,proto3" json:"networks,omitempty"` //网络列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetadataItem) Reset() {
	*x = MetadataItem{}
	mi := &file_block_subscribe_v1_block_subscribe_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataItem) ProtoMessage() {}

func (x *MetadataItem) ProtoReflect() protoreflect.Message {
	mi := &file_block_subscribe_v1_block_subscribe_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataItem.ProtoReflect.Descriptor instead.
func (*MetadataItem) Descriptor() ([]byte, []int) {
	return file_block_subscribe_v1_block_subscribe_proto_rawDescGZIP(), []int{0}
}

func (x *MetadataItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetadataItem) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *MetadataItem) GetNetworks() []*NetworkItem {
	if x != nil {
		return x.Networks
	}
	return nil
}

type NetworkItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`       //网络名称
	Symbol        string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`   //网络符号
	Type          int32                  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`      //网络类型
	Tokens        []*TokenItem           `protobuf:"bytes,4,rep,name=tokens,proto3" json:"tokens,omitempty"`   //代币列表
	Configs       []*NetworkConfigItem   `protobuf:"bytes,5,rep,name=configs,proto3" json:"configs,omitempty"` //网络配置列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkItem) Reset() {
	*x = NetworkItem{}
	mi := &file_block_subscribe_v1_block_subscribe_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkItem) ProtoMessage() {}

func (x *NetworkItem) ProtoReflect() protoreflect.Message {
	mi := &file_block_subscribe_v1_block_subscribe_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkItem.ProtoReflect.Descriptor instead.
func (*NetworkItem) Descriptor() ([]byte, []int) {
	return file_block_subscribe_v1_block_subscribe_proto_rawDescGZIP(), []int{1}
}

func (x *NetworkItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkItem) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *NetworkItem) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *NetworkItem) GetTokens() []*TokenItem {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *NetworkItem) GetConfigs() []*NetworkConfigItem {
	if x != nil {
		return x.Configs
	}
	return nil
}

type TokenItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`          //代币名称
	Symbol        string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`      //代币符号
	Address       string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`    //代币地址
	Decimals      int32                  `protobuf:"varint,4,opt,name=decimals,proto3" json:"decimals,omitempty"` //代币小数位
	Type          int32                  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`         //代币类型 0 原生代币 1 合约代币
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenItem) Reset() {
	*x = TokenItem{}
	mi := &file_block_subscribe_v1_block_subscribe_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenItem) ProtoMessage() {}

func (x *TokenItem) ProtoReflect() protoreflect.Message {
	mi := &file_block_subscribe_v1_block_subscribe_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenItem.ProtoReflect.Descriptor instead.
func (*TokenItem) Descriptor() ([]byte, []int) {
	return file_block_subscribe_v1_block_subscribe_proto_rawDescGZIP(), []int{2}
}

func (x *TokenItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TokenItem) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TokenItem) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *TokenItem) GetDecimals() int32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *TokenItem) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type NetworkConfigItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`     //配置键
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` //配置值
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkConfigItem) Reset() {
	*x = NetworkConfigItem{}
	mi := &file_block_subscribe_v1_block_subscribe_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkConfigItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConfigItem) ProtoMessage() {}

func (x *NetworkConfigItem) ProtoReflect() protoreflect.Message {
	mi := &file_block_subscribe_v1_block_subscribe_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkConfigItem.ProtoReflect.Descriptor instead.
func (*NetworkConfigItem) Descriptor() ([]byte, []int) {
	return file_block_subscribe_v1_block_subscribe_proto_rawDescGZIP(), []int{3}
}

func (x *NetworkConfigItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *NetworkConfigItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GetSupportedMetadataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Refresh       bool                   `protobuf:"varint,1,opt,name=refresh,proto3" json:"refresh,omitempty"` //是否刷新
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSupportedMetadataRequest) Reset() {
	*x = GetSupportedMetadataRequest{}
	mi := &file_block_subscribe_v1_block_subscribe_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSupportedMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSupportedMetadataRequest) ProtoMessage() {}

func (x *GetSupportedMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_subscribe_v1_block_subscribe_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSupportedMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetSupportedMetadataRequest) Descriptor() ([]byte, []int) {
	return file_block_subscribe_v1_block_subscribe_proto_rawDescGZIP(), []int{4}
}

func (x *GetSupportedMetadataRequest) GetRefresh() bool {
	if x != nil {
		return x.Refresh
	}
	return false
}

type GetSupportedMetadataReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      []*MetadataItem        `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSupportedMetadataReply) Reset() {
	*x = GetSupportedMetadataReply{}
	mi := &file_block_subscribe_v1_block_subscribe_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSupportedMetadataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSupportedMetadataReply) ProtoMessage() {}

func (x *GetSupportedMetadataReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_subscribe_v1_block_subscribe_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSupportedMetadataReply.ProtoReflect.Descriptor instead.
func (*GetSupportedMetadataReply) Descriptor() ([]byte, []int) {
	return file_block_subscribe_v1_block_subscribe_proto_rawDescGZIP(), []int{5}
}

func (x *GetSupportedMetadataReply) GetMetadata() []*MetadataItem {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type IsSupportedChainNetworkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chain         string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`     //链名称
	Network       string                 `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"` //网络名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsSupportedChainNetworkRequest) Reset() {
	*x = IsSupportedChainNetworkRequest{}
	mi := &file_block_subscribe_v1_block_subscribe_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsSupportedChainNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsSupportedChainNetworkRequest) ProtoMessage() {}

func (x *IsSupportedChainNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_subscribe_v1_block_subscribe_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsSupportedChainNetworkRequest.ProtoReflect.Descriptor instead.
func (*IsSupportedChainNetworkRequest) Descriptor() ([]byte, []int) {
	return file_block_subscribe_v1_block_subscribe_proto_rawDescGZIP(), []int{6}
}

func (x *IsSupportedChainNetworkRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *IsSupportedChainNetworkRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

type IsSupportedChainNetworkReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Supported     bool                   `protobuf:"varint,1,opt,name=supported,proto3" json:"supported,omitempty"` //是否支持
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsSupportedChainNetworkReply) Reset() {
	*x = IsSupportedChainNetworkReply{}
	mi := &file_block_subscribe_v1_block_subscribe_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsSupportedChainNetworkReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsSupportedChainNetworkReply) ProtoMessage() {}

func (x *IsSupportedChainNetworkReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_subscribe_v1_block_subscribe_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsSupportedChainNetworkReply.ProtoReflect.Descriptor instead.
func (*IsSupportedChainNetworkReply) Descriptor() ([]byte, []int) {
	return file_block_subscribe_v1_block_subscribe_proto_rawDescGZIP(), []int{7}
}

func (x *IsSupportedChainNetworkReply) GetSupported() bool {
	if x != nil {
		return x.Supported
	}
	return false
}

type SubscribeTransactionRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Chain             string                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`                                                  // 链名称
	Network           string                 `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`                                              // 网络名称
	ContractAddresses []string               `protobuf:"bytes,3,rep,name=contract_addresses,json=contractAddresses,proto3" json:"contract_addresses,omitempty"` // 过滤的合约地址
	FromAddresses     []string               `protobuf:"bytes,4,rep,name=from_addresses,json=fromAddresses,proto3" json:"from_addresses,omitempty"`             // 过滤的发起地址
	ToAddresses       []string               `protobuf:"bytes,5,rep,name=to_addresses,json=toAddresses,proto3" json:"to_addresses,omitempty"`                   // 过滤的接收地址
	OnChainStatus     *bool                  `protobuf:"varint,6,opt,name=on_chain_status,json=onChainStatus,proto3,oneof" json:"on_chain_status,omitempty"`    // 是否过滤链上状态
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SubscribeTransactionRequest) Reset() {
	*x = SubscribeTransactionRequest{}
	mi := &file_block_subscribe_v1_block_subscribe_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeTransactionRequest) ProtoMessage() {}

func (x *SubscribeTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_block_subscribe_v1_block_subscribe_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeTransactionRequest.ProtoReflect.Descriptor instead.
func (*SubscribeTransactionRequest) Descriptor() ([]byte, []int) {
	return file_block_subscribe_v1_block_subscribe_proto_rawDescGZIP(), []int{8}
}

func (x *SubscribeTransactionRequest) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *SubscribeTransactionRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *SubscribeTransactionRequest) GetContractAddresses() []string {
	if x != nil {
		return x.ContractAddresses
	}
	return nil
}

func (x *SubscribeTransactionRequest) GetFromAddresses() []string {
	if x != nil {
		return x.FromAddresses
	}
	return nil
}

func (x *SubscribeTransactionRequest) GetToAddresses() []string {
	if x != nil {
		return x.ToAddresses
	}
	return nil
}

func (x *SubscribeTransactionRequest) GetOnChainStatus() bool {
	if x != nil && x.OnChainStatus != nil {
		return *x.OnChainStatus
	}
	return false
}

type SubscribeTransactionReply struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Transactions  []*SubscribeTransactionItem `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"` // 交易列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeTransactionReply) Reset() {
	*x = SubscribeTransactionReply{}
	mi := &file_block_subscribe_v1_block_subscribe_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeTransactionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeTransactionReply) ProtoMessage() {}

func (x *SubscribeTransactionReply) ProtoReflect() protoreflect.Message {
	mi := &file_block_subscribe_v1_block_subscribe_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeTransactionReply.ProtoReflect.Descriptor instead.
func (*SubscribeTransactionReply) Descriptor() ([]byte, []int) {
	return file_block_subscribe_v1_block_subscribe_proto_rawDescGZIP(), []int{9}
}

func (x *SubscribeTransactionReply) GetTransactions() []*SubscribeTransactionItem {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type SubscribeTransactionItem struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BlockNumber     *int64                 `protobuf:"varint,1,opt,name=block_number,json=blockNumber,proto3,oneof" json:"block_number,omitempty"`            // 区块号
	BlockTime       *int64                 `protobuf:"varint,2,opt,name=block_time,json=blockTime,proto3,oneof" json:"block_time,omitempty"`                  // 区块时间
	FromAddress     *string                `protobuf:"bytes,3,opt,name=from_address,json=fromAddress,proto3,oneof" json:"from_address,omitempty"`             // 发起地址
	ToAddress       *string                `protobuf:"bytes,4,opt,name=to_address,json=toAddress,proto3,oneof" json:"to_address,omitempty"`                   // 接收地址
	Value           *string                `protobuf:"bytes,5,opt,name=value,proto3,oneof" json:"value,omitempty"`                                            // 金额
	Hash            *string                `protobuf:"bytes,6,opt,name=hash,proto3,oneof" json:"hash,omitempty"`                                              // 交易哈希
	Chain           *string                `protobuf:"bytes,7,opt,name=chain,proto3,oneof" json:"chain,omitempty"`                                            // 链名称
	Network         *string                `protobuf:"bytes,8,opt,name=network,proto3,oneof" json:"network,omitempty"`                                        // 网络名称
	ContractAddress *string                `protobuf:"bytes,9,opt,name=contract_address,json=contractAddress,proto3,oneof" json:"contract_address,omitempty"` // 合约地址
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SubscribeTransactionItem) Reset() {
	*x = SubscribeTransactionItem{}
	mi := &file_block_subscribe_v1_block_subscribe_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeTransactionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeTransactionItem) ProtoMessage() {}

func (x *SubscribeTransactionItem) ProtoReflect() protoreflect.Message {
	mi := &file_block_subscribe_v1_block_subscribe_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeTransactionItem.ProtoReflect.Descriptor instead.
func (*SubscribeTransactionItem) Descriptor() ([]byte, []int) {
	return file_block_subscribe_v1_block_subscribe_proto_rawDescGZIP(), []int{10}
}

func (x *SubscribeTransactionItem) GetBlockNumber() int64 {
	if x != nil && x.BlockNumber != nil {
		return *x.BlockNumber
	}
	return 0
}

func (x *SubscribeTransactionItem) GetBlockTime() int64 {
	if x != nil && x.BlockTime != nil {
		return *x.BlockTime
	}
	return 0
}

func (x *SubscribeTransactionItem) GetFromAddress() string {
	if x != nil && x.FromAddress != nil {
		return *x.FromAddress
	}
	return ""
}

func (x *SubscribeTransactionItem) GetToAddress() string {
	if x != nil && x.ToAddress != nil {
		return *x.ToAddress
	}
	return ""
}

func (x *SubscribeTransactionItem) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *SubscribeTransactionItem) GetHash() string {
	if x != nil && x.Hash != nil {
		return *x.Hash
	}
	return ""
}

func (x *SubscribeTransactionItem) GetChain() string {
	if x != nil && x.Chain != nil {
		return *x.Chain
	}
	return ""
}

func (x *SubscribeTransactionItem) GetNetwork() string {
	if x != nil && x.Network != nil {
		return *x.Network
	}
	return ""
}

func (x *SubscribeTransactionItem) GetContractAddress() string {
	if x != nil && x.ContractAddress != nil {
		return *x.ContractAddress
	}
	return ""
}

var File_block_subscribe_v1_block_subscribe_proto protoreflect.FileDescriptor

var file_block_subscribe_v1_block_subscribe_proto_rawDesc = string([]byte{
	0x0a, 0x28, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x61, 0x70, 0x69, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e,
	0x76, 0x31, 0x22, 0x7b, 0x0a, 0x0c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x3f,
	0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x22,
	0xcd, 0x01, 0x0a, 0x0b, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x39, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x43, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22,
	0x81, 0x01, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x3b, 0x0a, 0x11, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x37, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x22, 0x5d, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x40, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x50, 0x0a, 0x1e, 0x49, 0x73, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x3c, 0x0a, 0x1c, 0x49, 0x73,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x22, 0x87, 0x02, 0x0a, 0x1b, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x12, 0x2b, 0x0a, 0x0f, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0d, 0x6f, 0x6e,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x42, 0x12,
	0x0a, 0x10, 0x5f, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x71, 0x0a, 0x19, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x54, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xce, 0x03, 0x0a, 0x18, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x26, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01,
	0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26,
	0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x09, 0x74, 0x6f,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x19,
	0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52,
	0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x07, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x08, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x6f,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x94, 0x03, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x7e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x87, 0x01, 0x0a, 0x17, 0x49, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x36, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x80, 0x01, 0x0a, 0x14, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x30, 0x01, 0x42, 0x3b, 0x0a,
	0x16, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x1f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_block_subscribe_v1_block_subscribe_proto_rawDescOnce sync.Once
	file_block_subscribe_v1_block_subscribe_proto_rawDescData []byte
)

func file_block_subscribe_v1_block_subscribe_proto_rawDescGZIP() []byte {
	file_block_subscribe_v1_block_subscribe_proto_rawDescOnce.Do(func() {
		file_block_subscribe_v1_block_subscribe_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_block_subscribe_v1_block_subscribe_proto_rawDesc), len(file_block_subscribe_v1_block_subscribe_proto_rawDesc)))
	})
	return file_block_subscribe_v1_block_subscribe_proto_rawDescData
}

var file_block_subscribe_v1_block_subscribe_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_block_subscribe_v1_block_subscribe_proto_goTypes = []any{
	(*MetadataItem)(nil),                   // 0: api.block_subscribe.v1.MetadataItem
	(*NetworkItem)(nil),                    // 1: api.block_subscribe.v1.NetworkItem
	(*TokenItem)(nil),                      // 2: api.block_subscribe.v1.TokenItem
	(*NetworkConfigItem)(nil),              // 3: api.block_subscribe.v1.NetworkConfigItem
	(*GetSupportedMetadataRequest)(nil),    // 4: api.block_subscribe.v1.GetSupportedMetadataRequest
	(*GetSupportedMetadataReply)(nil),      // 5: api.block_subscribe.v1.GetSupportedMetadataReply
	(*IsSupportedChainNetworkRequest)(nil), // 6: api.block_subscribe.v1.IsSupportedChainNetworkRequest
	(*IsSupportedChainNetworkReply)(nil),   // 7: api.block_subscribe.v1.IsSupportedChainNetworkReply
	(*SubscribeTransactionRequest)(nil),    // 8: api.block_subscribe.v1.SubscribeTransactionRequest
	(*SubscribeTransactionReply)(nil),      // 9: api.block_subscribe.v1.SubscribeTransactionReply
	(*SubscribeTransactionItem)(nil),       // 10: api.block_subscribe.v1.SubscribeTransactionItem
}
var file_block_subscribe_v1_block_subscribe_proto_depIdxs = []int32{
	1,  // 0: api.block_subscribe.v1.MetadataItem.networks:type_name -> api.block_subscribe.v1.NetworkItem
	2,  // 1: api.block_subscribe.v1.NetworkItem.tokens:type_name -> api.block_subscribe.v1.TokenItem
	3,  // 2: api.block_subscribe.v1.NetworkItem.configs:type_name -> api.block_subscribe.v1.NetworkConfigItem
	0,  // 3: api.block_subscribe.v1.GetSupportedMetadataReply.metadata:type_name -> api.block_subscribe.v1.MetadataItem
	10, // 4: api.block_subscribe.v1.SubscribeTransactionReply.transactions:type_name -> api.block_subscribe.v1.SubscribeTransactionItem
	4,  // 5: api.block_subscribe.v1.Block.GetSupportedMetadata:input_type -> api.block_subscribe.v1.GetSupportedMetadataRequest
	6,  // 6: api.block_subscribe.v1.Block.IsSupportedChainNetwork:input_type -> api.block_subscribe.v1.IsSupportedChainNetworkRequest
	8,  // 7: api.block_subscribe.v1.Block.SubscribeTransaction:input_type -> api.block_subscribe.v1.SubscribeTransactionRequest
	5,  // 8: api.block_subscribe.v1.Block.GetSupportedMetadata:output_type -> api.block_subscribe.v1.GetSupportedMetadataReply
	7,  // 9: api.block_subscribe.v1.Block.IsSupportedChainNetwork:output_type -> api.block_subscribe.v1.IsSupportedChainNetworkReply
	9,  // 10: api.block_subscribe.v1.Block.SubscribeTransaction:output_type -> api.block_subscribe.v1.SubscribeTransactionReply
	8,  // [8:11] is the sub-list for method output_type
	5,  // [5:8] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_block_subscribe_v1_block_subscribe_proto_init() }
func file_block_subscribe_v1_block_subscribe_proto_init() {
	if File_block_subscribe_v1_block_subscribe_proto != nil {
		return
	}
	file_block_subscribe_v1_block_subscribe_proto_msgTypes[8].OneofWrappers = []any{}
	file_block_subscribe_v1_block_subscribe_proto_msgTypes[10].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_block_subscribe_v1_block_subscribe_proto_rawDesc), len(file_block_subscribe_v1_block_subscribe_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_block_subscribe_v1_block_subscribe_proto_goTypes,
		DependencyIndexes: file_block_subscribe_v1_block_subscribe_proto_depIdxs,
		MessageInfos:      file_block_subscribe_v1_block_subscribe_proto_msgTypes,
	}.Build()
	File_block_subscribe_v1_block_subscribe_proto = out.File
	file_block_subscribe_v1_block_subscribe_proto_goTypes = nil
	file_block_subscribe_v1_block_subscribe_proto_depIdxs = nil
}
