// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: sniper/v1/sniper.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSniperOrderRequest struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	ChainName    string                 `protobuf:"bytes,1,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`          // 链名称
	TokenAddress string                 `protobuf:"bytes,2,opt,name=token_address,json=tokenAddress,proto3" json:"token_address,omitempty"` // 代币地址
	BuyTax       *float64               `protobuf:"fixed64,3,opt,name=buy_tax,json=buyTax,proto3,oneof" json:"buy_tax,omitempty"`           // 买入税率
	SellTax      *float64               `protobuf:"fixed64,4,opt,name=sell_tax,json=sellTax,proto3,oneof" json:"sell_tax,omitempty"`        // 卖出税率
	GasPrice     float64                `protobuf:"fixed64,5,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`           // gas 价格
	StorageId    string                 `protobuf:"bytes,6,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`          // 存储ID
	// Types that are valid to be assigned to OrderDetail:
	//
	//	*CreateSniperOrderRequest_ExactInputOrder
	//	*CreateSniperOrderRequest_ExactOutputOrder
	OrderDetail   isCreateSniperOrderRequest_OrderDetail `protobuf_oneof:"order_detail"`
	ExpireTime    *timestamppb.Timestamp                 `protobuf:"bytes,9,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`     // 过期时间
	UserAddress   string                                 `protobuf:"bytes,10,opt,name=user_address,json=userAddress,proto3" json:"user_address,omitempty"` // 用户地址
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSniperOrderRequest) Reset() {
	*x = CreateSniperOrderRequest{}
	mi := &file_sniper_v1_sniper_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSniperOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSniperOrderRequest) ProtoMessage() {}

func (x *CreateSniperOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sniper_v1_sniper_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSniperOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateSniperOrderRequest) Descriptor() ([]byte, []int) {
	return file_sniper_v1_sniper_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSniperOrderRequest) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *CreateSniperOrderRequest) GetTokenAddress() string {
	if x != nil {
		return x.TokenAddress
	}
	return ""
}

func (x *CreateSniperOrderRequest) GetBuyTax() float64 {
	if x != nil && x.BuyTax != nil {
		return *x.BuyTax
	}
	return 0
}

func (x *CreateSniperOrderRequest) GetSellTax() float64 {
	if x != nil && x.SellTax != nil {
		return *x.SellTax
	}
	return 0
}

func (x *CreateSniperOrderRequest) GetGasPrice() float64 {
	if x != nil {
		return x.GasPrice
	}
	return 0
}

func (x *CreateSniperOrderRequest) GetStorageId() string {
	if x != nil {
		return x.StorageId
	}
	return ""
}

func (x *CreateSniperOrderRequest) GetOrderDetail() isCreateSniperOrderRequest_OrderDetail {
	if x != nil {
		return x.OrderDetail
	}
	return nil
}

func (x *CreateSniperOrderRequest) GetExactInputOrder() *ExactInputOrder {
	if x != nil {
		if x, ok := x.OrderDetail.(*CreateSniperOrderRequest_ExactInputOrder); ok {
			return x.ExactInputOrder
		}
	}
	return nil
}

func (x *CreateSniperOrderRequest) GetExactOutputOrder() *ExactOutputOrder {
	if x != nil {
		if x, ok := x.OrderDetail.(*CreateSniperOrderRequest_ExactOutputOrder); ok {
			return x.ExactOutputOrder
		}
	}
	return nil
}

func (x *CreateSniperOrderRequest) GetExpireTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpireTime
	}
	return nil
}

func (x *CreateSniperOrderRequest) GetUserAddress() string {
	if x != nil {
		return x.UserAddress
	}
	return ""
}

type isCreateSniperOrderRequest_OrderDetail interface {
	isCreateSniperOrderRequest_OrderDetail()
}

type CreateSniperOrderRequest_ExactInputOrder struct {
	ExactInputOrder *ExactInputOrder `protobuf:"bytes,7,opt,name=exact_input_order,json=exactInputOrder,proto3,oneof"` // 固定输入订单
}

type CreateSniperOrderRequest_ExactOutputOrder struct {
	ExactOutputOrder *ExactOutputOrder `protobuf:"bytes,8,opt,name=exact_output_order,json=exactOutputOrder,proto3,oneof"` // 固定输出订单
}

func (*CreateSniperOrderRequest_ExactInputOrder) isCreateSniperOrderRequest_OrderDetail() {}

func (*CreateSniperOrderRequest_ExactOutputOrder) isCreateSniperOrderRequest_OrderDetail() {}

type ExactInputOrder struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	InputAmount     float64                `protobuf:"fixed64,1,opt,name=input_amount,json=inputAmount,proto3" json:"input_amount,omitempty"`               // 固定输入金额
	MinOutputAmount float64                `protobuf:"fixed64,2,opt,name=min_output_amount,json=minOutputAmount,proto3" json:"min_output_amount,omitempty"` // 最小输出金额
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ExactInputOrder) Reset() {
	*x = ExactInputOrder{}
	mi := &file_sniper_v1_sniper_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExactInputOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExactInputOrder) ProtoMessage() {}

func (x *ExactInputOrder) ProtoReflect() protoreflect.Message {
	mi := &file_sniper_v1_sniper_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExactInputOrder.ProtoReflect.Descriptor instead.
func (*ExactInputOrder) Descriptor() ([]byte, []int) {
	return file_sniper_v1_sniper_proto_rawDescGZIP(), []int{1}
}

func (x *ExactInputOrder) GetInputAmount() float64 {
	if x != nil {
		return x.InputAmount
	}
	return 0
}

func (x *ExactInputOrder) GetMinOutputAmount() float64 {
	if x != nil {
		return x.MinOutputAmount
	}
	return 0
}

type ExactOutputOrder struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OutputAmount   float64                `protobuf:"fixed64,1,opt,name=output_amount,json=outputAmount,proto3" json:"output_amount,omitempty"`         // 固定输出代币
	MaxInputAmount float64                `protobuf:"fixed64,2,opt,name=max_input_amount,json=maxInputAmount,proto3" json:"max_input_amount,omitempty"` // 最大输入金额
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ExactOutputOrder) Reset() {
	*x = ExactOutputOrder{}
	mi := &file_sniper_v1_sniper_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExactOutputOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExactOutputOrder) ProtoMessage() {}

func (x *ExactOutputOrder) ProtoReflect() protoreflect.Message {
	mi := &file_sniper_v1_sniper_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExactOutputOrder.ProtoReflect.Descriptor instead.
func (*ExactOutputOrder) Descriptor() ([]byte, []int) {
	return file_sniper_v1_sniper_proto_rawDescGZIP(), []int{2}
}

func (x *ExactOutputOrder) GetOutputAmount() float64 {
	if x != nil {
		return x.OutputAmount
	}
	return 0
}

func (x *ExactOutputOrder) GetMaxInputAmount() float64 {
	if x != nil {
		return x.MaxInputAmount
	}
	return 0
}

type CreateSniperOrderReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"` // 订单ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSniperOrderReply) Reset() {
	*x = CreateSniperOrderReply{}
	mi := &file_sniper_v1_sniper_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSniperOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSniperOrderReply) ProtoMessage() {}

func (x *CreateSniperOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_sniper_v1_sniper_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSniperOrderReply.ProtoReflect.Descriptor instead.
func (*CreateSniperOrderReply) Descriptor() ([]byte, []int) {
	return file_sniper_v1_sniper_proto_rawDescGZIP(), []int{3}
}

func (x *CreateSniperOrderReply) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type CancelSniperOrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"` // 订单ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelSniperOrderRequest) Reset() {
	*x = CancelSniperOrderRequest{}
	mi := &file_sniper_v1_sniper_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelSniperOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelSniperOrderRequest) ProtoMessage() {}

func (x *CancelSniperOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sniper_v1_sniper_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelSniperOrderRequest.ProtoReflect.Descriptor instead.
func (*CancelSniperOrderRequest) Descriptor() ([]byte, []int) {
	return file_sniper_v1_sniper_proto_rawDescGZIP(), []int{4}
}

func (x *CancelSniperOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type CancelSniperOrderReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"` // 订单ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelSniperOrderReply) Reset() {
	*x = CancelSniperOrderReply{}
	mi := &file_sniper_v1_sniper_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelSniperOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelSniperOrderReply) ProtoMessage() {}

func (x *CancelSniperOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_sniper_v1_sniper_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelSniperOrderReply.ProtoReflect.Descriptor instead.
func (*CancelSniperOrderReply) Descriptor() ([]byte, []int) {
	return file_sniper_v1_sniper_proto_rawDescGZIP(), []int{5}
}

func (x *CancelSniperOrderReply) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type GetSniperOrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"` // 订单ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSniperOrderRequest) Reset() {
	*x = GetSniperOrderRequest{}
	mi := &file_sniper_v1_sniper_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSniperOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSniperOrderRequest) ProtoMessage() {}

func (x *GetSniperOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sniper_v1_sniper_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSniperOrderRequest.ProtoReflect.Descriptor instead.
func (*GetSniperOrderRequest) Descriptor() ([]byte, []int) {
	return file_sniper_v1_sniper_proto_rawDescGZIP(), []int{6}
}

func (x *GetSniperOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type GetSniperOrderReply struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	OrderId         string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                                    // 订单ID
	ChainName       string                 `protobuf:"bytes,2,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`                              // 链名称
	TokenAddress    string                 `protobuf:"bytes,3,opt,name=token_address,json=tokenAddress,proto3" json:"token_address,omitempty"`                     // 代币地址
	BuyTax          *float64               `protobuf:"fixed64,4,opt,name=buy_tax,json=buyTax,proto3,oneof" json:"buy_tax,omitempty"`                               // 买入税率
	SellTax         *float64               `protobuf:"fixed64,5,opt,name=sell_tax,json=sellTax,proto3,oneof" json:"sell_tax,omitempty"`                            // 卖出税率
	GasPrice        float64                `protobuf:"fixed64,6,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`                               // gas 价格
	StorageId       string                 `protobuf:"bytes,7,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`                              // 存储ID
	OrderType       int32                  `protobuf:"varint,8,opt,name=order_type,json=orderType,proto3" json:"order_type,omitempty"`                             // 订单类型
	InputAmount     *float64               `protobuf:"fixed64,9,opt,name=input_amount,json=inputAmount,proto3,oneof" json:"input_amount,omitempty"`                // 固定输入金额
	MinOutputAmount *float64               `protobuf:"fixed64,10,opt,name=min_output_amount,json=minOutputAmount,proto3,oneof" json:"min_output_amount,omitempty"` // 最小输出金额
	OutputAmount    *float64               `protobuf:"fixed64,11,opt,name=output_amount,json=outputAmount,proto3,oneof" json:"output_amount,omitempty"`            // 固定输出代币
	MaxInputAmount  *float64               `protobuf:"fixed64,12,opt,name=max_input_amount,json=maxInputAmount,proto3,oneof" json:"max_input_amount,omitempty"`    // 最大输入金额
	Status          int32                  `protobuf:"varint,13,opt,name=status,proto3" json:"status,omitempty"`                                                   // 订单状态
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                             // 创建时间
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                             // 更新时间
	ExpiredAt       *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=expired_at,json=expiredAt,proto3" json:"expired_at,omitempty"`                             // 过期时间
	Result          *string                `protobuf:"bytes,17,opt,name=result,proto3,oneof" json:"result,omitempty"`                                              // 结果
	UserAddress     string                 `protobuf:"bytes,18,opt,name=user_address,json=userAddress,proto3" json:"user_address,omitempty"`                       // 用户地址
	StorageId_2     string                 `protobuf:"bytes,19,opt,name=storage_id_2,json=storageId2,proto3" json:"storage_id_2,omitempty"`                        // 存储ID
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetSniperOrderReply) Reset() {
	*x = GetSniperOrderReply{}
	mi := &file_sniper_v1_sniper_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSniperOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSniperOrderReply) ProtoMessage() {}

func (x *GetSniperOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_sniper_v1_sniper_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSniperOrderReply.ProtoReflect.Descriptor instead.
func (*GetSniperOrderReply) Descriptor() ([]byte, []int) {
	return file_sniper_v1_sniper_proto_rawDescGZIP(), []int{7}
}

func (x *GetSniperOrderReply) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *GetSniperOrderReply) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *GetSniperOrderReply) GetTokenAddress() string {
	if x != nil {
		return x.TokenAddress
	}
	return ""
}

func (x *GetSniperOrderReply) GetBuyTax() float64 {
	if x != nil && x.BuyTax != nil {
		return *x.BuyTax
	}
	return 0
}

func (x *GetSniperOrderReply) GetSellTax() float64 {
	if x != nil && x.SellTax != nil {
		return *x.SellTax
	}
	return 0
}

func (x *GetSniperOrderReply) GetGasPrice() float64 {
	if x != nil {
		return x.GasPrice
	}
	return 0
}

func (x *GetSniperOrderReply) GetStorageId() string {
	if x != nil {
		return x.StorageId
	}
	return ""
}

func (x *GetSniperOrderReply) GetOrderType() int32 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *GetSniperOrderReply) GetInputAmount() float64 {
	if x != nil && x.InputAmount != nil {
		return *x.InputAmount
	}
	return 0
}

func (x *GetSniperOrderReply) GetMinOutputAmount() float64 {
	if x != nil && x.MinOutputAmount != nil {
		return *x.MinOutputAmount
	}
	return 0
}

func (x *GetSniperOrderReply) GetOutputAmount() float64 {
	if x != nil && x.OutputAmount != nil {
		return *x.OutputAmount
	}
	return 0
}

func (x *GetSniperOrderReply) GetMaxInputAmount() float64 {
	if x != nil && x.MaxInputAmount != nil {
		return *x.MaxInputAmount
	}
	return 0
}

func (x *GetSniperOrderReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetSniperOrderReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetSniperOrderReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GetSniperOrderReply) GetExpiredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredAt
	}
	return nil
}

func (x *GetSniperOrderReply) GetResult() string {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return ""
}

func (x *GetSniperOrderReply) GetUserAddress() string {
	if x != nil {
		return x.UserAddress
	}
	return ""
}

func (x *GetSniperOrderReply) GetStorageId_2() string {
	if x != nil {
		return x.StorageId_2
	}
	return ""
}

type GetAllSniperOrdersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserAddress   string                 `protobuf:"bytes,1,opt,name=user_address,json=userAddress,proto3" json:"user_address,omitempty"` // 用户地址
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllSniperOrdersRequest) Reset() {
	*x = GetAllSniperOrdersRequest{}
	mi := &file_sniper_v1_sniper_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllSniperOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllSniperOrdersRequest) ProtoMessage() {}

func (x *GetAllSniperOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sniper_v1_sniper_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllSniperOrdersRequest.ProtoReflect.Descriptor instead.
func (*GetAllSniperOrdersRequest) Descriptor() ([]byte, []int) {
	return file_sniper_v1_sniper_proto_rawDescGZIP(), []int{8}
}

func (x *GetAllSniperOrdersRequest) GetUserAddress() string {
	if x != nil {
		return x.UserAddress
	}
	return ""
}

type GetAllSniperOrdersReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Orders        []*GetSniperOrderReply `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"` // 订单列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllSniperOrdersReply) Reset() {
	*x = GetAllSniperOrdersReply{}
	mi := &file_sniper_v1_sniper_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllSniperOrdersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllSniperOrdersReply) ProtoMessage() {}

func (x *GetAllSniperOrdersReply) ProtoReflect() protoreflect.Message {
	mi := &file_sniper_v1_sniper_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllSniperOrdersReply.ProtoReflect.Descriptor instead.
func (*GetAllSniperOrdersReply) Descriptor() ([]byte, []int) {
	return file_sniper_v1_sniper_proto_rawDescGZIP(), []int{9}
}

func (x *GetAllSniperOrdersReply) GetOrders() []*GetSniperOrderReply {
	if x != nil {
		return x.Orders
	}
	return nil
}

var File_sniper_v1_sniper_proto protoreflect.FileDescriptor

var file_sniper_v1_sniper_proto_rawDesc = string([]byte{
	0x0a, 0x16, 0x73, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6e, 0x69, 0x70,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6e,
	0x69, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x80, 0x04, 0x0a, 0x18, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x07, 0x62, 0x75, 0x79,
	0x5f, 0x74, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x06, 0x62, 0x75,
	0x79, 0x54, 0x61, 0x78, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x5f,
	0x74, 0x61, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x48, 0x02, 0x52, 0x07, 0x73, 0x65, 0x6c,
	0x6c, 0x54, 0x61, 0x78, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x67, 0x61, 0x73, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x4c, 0x0a, 0x11, 0x65, 0x78, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x78, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x0f, 0x65, 0x78, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x4f, 0x0a, 0x12, 0x65, 0x78, 0x61, 0x63, 0x74, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78,
	0x61, 0x63, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x10, 0x65, 0x78, 0x61, 0x63, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x62, 0x75, 0x79, 0x5f, 0x74, 0x61, 0x78, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x74, 0x61, 0x78, 0x22, 0x60, 0x0a, 0x0f, 0x45,
	0x78, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x21,
	0x0a, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x6d, 0x69,
	0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x61, 0x0a,
	0x10, 0x45, 0x78, 0x61, 0x63, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0e, 0x6d, 0x61, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x33, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x69, 0x70, 0x65, 0x72,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x18, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53,
	0x6e, 0x69, 0x70, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x16,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x32, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xdc, 0x06, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x6e, 0x69,
	0x70, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x07,
	0x62, 0x75, 0x79, 0x5f, 0x74, 0x61, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52,
	0x06, 0x62, 0x75, 0x79, 0x54, 0x61, 0x78, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x73, 0x65,
	0x6c, 0x6c, 0x5f, 0x74, 0x61, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x07,
	0x73, 0x65, 0x6c, 0x6c, 0x54, 0x61, 0x78, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61,
	0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x67,
	0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x48, 0x02, 0x52, 0x0b, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a,
	0x11, 0x6d, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x48, 0x03, 0x52, 0x0f, 0x6d, 0x69, 0x6e, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x28,
	0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x01, 0x48, 0x04, 0x52, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x01, 0x48, 0x05, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x06, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a,
	0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x20, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x32,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x32, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x62, 0x75, 0x79, 0x5f, 0x74, 0x61, 0x78, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x74, 0x61, 0x78, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x14, 0x0a, 0x12,
	0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x3e, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x6e,
	0x69, 0x70, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x55, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x6e,
	0x69, 0x70, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x3a, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x32, 0x96, 0x03, 0x0a, 0x06,
	0x53, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x12, 0x63, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x69, 0x70, 0x65,
	0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x63, 0x0a, 0x11, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x53, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x5a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x6e, 0x69, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6e, 0x69, 0x70,
	0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x66, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x53, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x42, 0x3a, 0x0a, 0x0d, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x6e, 0x69, 0x70,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x27, 0x63, 0x6f, 0x72, 0x6e, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x70, 0x63, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x73, 0x6e, 0x69, 0x70, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_sniper_v1_sniper_proto_rawDescOnce sync.Once
	file_sniper_v1_sniper_proto_rawDescData []byte
)

func file_sniper_v1_sniper_proto_rawDescGZIP() []byte {
	file_sniper_v1_sniper_proto_rawDescOnce.Do(func() {
		file_sniper_v1_sniper_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sniper_v1_sniper_proto_rawDesc), len(file_sniper_v1_sniper_proto_rawDesc)))
	})
	return file_sniper_v1_sniper_proto_rawDescData
}

var file_sniper_v1_sniper_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_sniper_v1_sniper_proto_goTypes = []any{
	(*CreateSniperOrderRequest)(nil),  // 0: api.sniper.v1.CreateSniperOrderRequest
	(*ExactInputOrder)(nil),           // 1: api.sniper.v1.ExactInputOrder
	(*ExactOutputOrder)(nil),          // 2: api.sniper.v1.ExactOutputOrder
	(*CreateSniperOrderReply)(nil),    // 3: api.sniper.v1.CreateSniperOrderReply
	(*CancelSniperOrderRequest)(nil),  // 4: api.sniper.v1.CancelSniperOrderRequest
	(*CancelSniperOrderReply)(nil),    // 5: api.sniper.v1.CancelSniperOrderReply
	(*GetSniperOrderRequest)(nil),     // 6: api.sniper.v1.GetSniperOrderRequest
	(*GetSniperOrderReply)(nil),       // 7: api.sniper.v1.GetSniperOrderReply
	(*GetAllSniperOrdersRequest)(nil), // 8: api.sniper.v1.GetAllSniperOrdersRequest
	(*GetAllSniperOrdersReply)(nil),   // 9: api.sniper.v1.GetAllSniperOrdersReply
	(*timestamppb.Timestamp)(nil),     // 10: google.protobuf.Timestamp
}
var file_sniper_v1_sniper_proto_depIdxs = []int32{
	1,  // 0: api.sniper.v1.CreateSniperOrderRequest.exact_input_order:type_name -> api.sniper.v1.ExactInputOrder
	2,  // 1: api.sniper.v1.CreateSniperOrderRequest.exact_output_order:type_name -> api.sniper.v1.ExactOutputOrder
	10, // 2: api.sniper.v1.CreateSniperOrderRequest.expire_time:type_name -> google.protobuf.Timestamp
	10, // 3: api.sniper.v1.GetSniperOrderReply.created_at:type_name -> google.protobuf.Timestamp
	10, // 4: api.sniper.v1.GetSniperOrderReply.updated_at:type_name -> google.protobuf.Timestamp
	10, // 5: api.sniper.v1.GetSniperOrderReply.expired_at:type_name -> google.protobuf.Timestamp
	7,  // 6: api.sniper.v1.GetAllSniperOrdersReply.orders:type_name -> api.sniper.v1.GetSniperOrderReply
	0,  // 7: api.sniper.v1.Sniper.CreateSniperOrder:input_type -> api.sniper.v1.CreateSniperOrderRequest
	4,  // 8: api.sniper.v1.Sniper.CancelSniperOrder:input_type -> api.sniper.v1.CancelSniperOrderRequest
	6,  // 9: api.sniper.v1.Sniper.GetSniperOrder:input_type -> api.sniper.v1.GetSniperOrderRequest
	8,  // 10: api.sniper.v1.Sniper.GetAllSniperOrders:input_type -> api.sniper.v1.GetAllSniperOrdersRequest
	3,  // 11: api.sniper.v1.Sniper.CreateSniperOrder:output_type -> api.sniper.v1.CreateSniperOrderReply
	5,  // 12: api.sniper.v1.Sniper.CancelSniperOrder:output_type -> api.sniper.v1.CancelSniperOrderReply
	7,  // 13: api.sniper.v1.Sniper.GetSniperOrder:output_type -> api.sniper.v1.GetSniperOrderReply
	9,  // 14: api.sniper.v1.Sniper.GetAllSniperOrders:output_type -> api.sniper.v1.GetAllSniperOrdersReply
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_sniper_v1_sniper_proto_init() }
func file_sniper_v1_sniper_proto_init() {
	if File_sniper_v1_sniper_proto != nil {
		return
	}
	file_sniper_v1_sniper_proto_msgTypes[0].OneofWrappers = []any{
		(*CreateSniperOrderRequest_ExactInputOrder)(nil),
		(*CreateSniperOrderRequest_ExactOutputOrder)(nil),
	}
	file_sniper_v1_sniper_proto_msgTypes[7].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sniper_v1_sniper_proto_rawDesc), len(file_sniper_v1_sniper_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sniper_v1_sniper_proto_goTypes,
		DependencyIndexes: file_sniper_v1_sniper_proto_depIdxs,
		MessageInfos:      file_sniper_v1_sniper_proto_msgTypes,
	}.Build()
	File_sniper_v1_sniper_proto = out.File
	file_sniper_v1_sniper_proto_goTypes = nil
	file_sniper_v1_sniper_proto_depIdxs = nil
}
